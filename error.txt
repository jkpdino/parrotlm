
============================================================
Training Configuration Review
============================================================

Model: tinystories_gpt_tiny
Device: CPU
Optimizer: adamw
Learning rate: 0.003
Batch size: 32

Press ENTER to start training...
────────────────────────────────────────────────────────────────────── Traceback (most recent call last) ───────────────────────────────────────────────────────────────────────╮
│ /Users/dino/Documents/Projects/datasets/train.py:534 in _training_step                                                                                                         │
│                                                                                                                                                                                │
│    531 │   │   # Forward pass                                                                                                                                                  │
│    532 │   │   with record_function("forward"):                                                                                                                                │
│    533 │   │   │   self.model.train()                                                                                                                                          │
│ ❱  534 │   │   │   result = self.model(tokens, masks)                                                                                                                          │
│    535 │   │                                                                                                                                                                   │
│    536 │   │   # Handle MoE models (return tuple) vs standard models (return tensor)                                                                                           │
│    537 │   │   with record_function("loss_computation"):                                                                                                                       │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────── locals ───────────────────────────────────────────────╮                                                                        │
│ │ labels = tensor([[ 330,  345,  157,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [ 330,  345,  157,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [ 330,  345,  157,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   ...,                                                                               │                                                                        │
│ │          │   │   [ 330,  345,  157,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [1103,  180,  157,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [ 330,  345,  157,  ...,    0,    0,    0]])                                       │                                                                        │
│ │  masks = None                                                                                       │                                                                        │
│ │   self = TrainingApp(title='TrainingApp', classes={'-dark-mode'}, pseudo_classes={'focus', 'dark'}) │                                                                        │
│ │ tokens = tensor([[   2,  330,  345,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [   2,  330,  345,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [   2,  330,  345,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   ...,                                                                               │                                                                        │
│ │          │   │   [   2,  330,  345,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                        │                                                                        │
│ │          │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                       │                                                                        │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                        │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/eval_frame.py:375 in __call__                                                         │
│                                                                                                                                                                                │
│    372 │   │   │   │   ", or use the per-module hooks instead",                                 ╭───────────────────────────── locals ─────────────────────────────╮           │
│    373 │   │   │   │   stacklevel=2,                                                            │   args = (                                                       │           │
│    374 │   │   │   )                                                                            │          │   tensor([[   2,  330,  345,  ...,    0,    0,    0], │           │
│ ❱  375 │   │   return super().__call__(*args, **kwargs)                                         │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│    376 │                                                                                        │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│    377 │   def __reduce__(self):                                                                │          │   │   ...,                                            │           │
│    378 │   │   return (self.__class__, (self._orig_mod, self.dynamo_ctx))                       │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2, 1103,  180,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2,  330,  345,  ...,    0,    0,    0]]),   │           │
│                                                                                                 │          │   None                                                │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 │ kwargs = {}                                                      │           │
│                                                                                                 │   self = OptimizedModule(                                        │           │
│                                                                                                 │            (_orig_mod): GPT(                                     │           │
│                                                                                                 │          │   vocab_size=32768,                                   │           │
│                                                                                                 │          │   dim=96,                                             │           │
│                                                                                                 │          │   depth=16,                                           │           │
│                                                                                                 │          │   n_heads=6,                                          │           │
│                                                                                                 │          │   n_kv_heads=2,                                       │           │
│                                                                                                 │          │   context_length=1024,                                │           │
│                                                                                                 │          │   use_gradient_checkpointing=False,                   │           │
│                                                                                                 │          │   total_params=3,148,896                              │           │
│                                                                                                 │            )                                                     │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 ╰──────────────────────────────────────────────────────────────────╯           │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py:1773 in _wrapped_call_impl                                               │
│                                                                                                                                                                                │
│   1770 │   │   if self._compiled_call_impl is not None:                                         ╭───────────────────────────── locals ─────────────────────────────╮           │
│   1771 │   │   │   return self._compiled_call_impl(*args, **kwargs)  # type: ignore[misc]       │   args = (                                                       │           │
│   1772 │   │   else:                                                                            │          │   tensor([[   2,  330,  345,  ...,    0,    0,    0], │           │
│ ❱ 1773 │   │   │   return self._call_impl(*args, **kwargs)                                      │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│   1774 │                                                                                        │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│   1775 │   # torchrec tests the code consistency with the following code                        │          │   │   ...,                                            │           │
│   1776 │   # fmt: off                                                                           │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2, 1103,  180,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2,  330,  345,  ...,    0,    0,    0]]),   │           │
│                                                                                                 │          │   None                                                │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 │ kwargs = {}                                                      │           │
│                                                                                                 │   self = OptimizedModule(                                        │           │
│                                                                                                 │            (_orig_mod): GPT(                                     │           │
│                                                                                                 │          │   vocab_size=32768,                                   │           │
│                                                                                                 │          │   dim=96,                                             │           │
│                                                                                                 │          │   depth=16,                                           │           │
│                                                                                                 │          │   n_heads=6,                                          │           │
│                                                                                                 │          │   n_kv_heads=2,                                       │           │
│                                                                                                 │          │   context_length=1024,                                │           │
│                                                                                                 │          │   use_gradient_checkpointing=False,                   │           │
│                                                                                                 │          │   total_params=3,148,896                              │           │
│                                                                                                 │            )                                                     │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 ╰──────────────────────────────────────────────────────────────────╯           │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py:1784 in _call_impl                                                       │
│                                                                                                                                                                                │
│   1781 │   │   if not (self._backward_hooks or self._backward_pre_hooks or self._forward_hooks  ╭───────────────────────────── locals ─────────────────────────────╮           │
│   1782 │   │   │   │   or _global_backward_pre_hooks or _global_backward_hooks                  │   args = (                                                       │           │
│   1783 │   │   │   │   or _global_forward_hooks or _global_forward_pre_hooks):                  │          │   tensor([[   2,  330,  345,  ...,    0,    0,    0], │           │
│ ❱ 1784 │   │   │   return forward_call(*args, **kwargs)                                         │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│   1785 │   │                                                                                    │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│   1786 │   │   result = None                                                                    │          │   │   ...,                                            │           │
│   1787 │   │   called_always_called_hooks = set()                                               │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2, 1103,  180,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2,  330,  345,  ...,    0,    0,    0]]),   │           │
│                                                                                                 │          │   None                                                │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 │ kwargs = {}                                                      │           │
│                                                                                                 │   self = OptimizedModule(                                        │           │
│                                                                                                 │            (_orig_mod): GPT(                                     │           │
│                                                                                                 │          │   vocab_size=32768,                                   │           │
│                                                                                                 │          │   dim=96,                                             │           │
│                                                                                                 │          │   depth=16,                                           │           │
│                                                                                                 │          │   n_heads=6,                                          │           │
│                                                                                                 │          │   n_kv_heads=2,                                       │           │
│                                                                                                 │          │   context_length=1024,                                │           │
│                                                                                                 │          │   use_gradient_checkpointing=False,                   │           │
│                                                                                                 │          │   total_params=3,148,896                              │           │
│                                                                                                 │            )                                                     │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 ╰──────────────────────────────────────────────────────────────────╯           │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/eval_frame.py:749 in compile_wrapper                                                  │
│                                                                                                                                                                                │
│    746 │   │   │   │   except ShortenTraceback as e:                                                                                                                           │
│    747 │   │   │   │   │   # Failures in the backend likely don't have useful                                                                                                  │
│    748 │   │   │   │   │   # data in the TorchDynamo frames, so we strip them out.                                                                                             │
│ ❱  749 │   │   │   │   │   raise e.remove_dynamo_frames() from None  # see TORCHDYNAMO_VERBOSE=                                                                                │
│    750 │   │   │   │   finally:                                                                                                                                                │
│    751 │   │   │   │   │   # Restore the dynamic layer stack depth if necessary.                                                                                               │
│    752 │   │   │   │   │   set_eval_frame(None)                                                                                                                                │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────────────────── locals ─────────────────────────────────────────────────╮                                                                   │
│ │                            args = (                                                                      │                                                                   │
│ │                                   │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   ...,                                                           │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   [   2, 1103,  180,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0]]),                  │                                                                   │
│ │                                   │   None                                                               │                                                                   │
│ │                                   )                                                                      │                                                                   │
│ │                        callback = <torch._dynamo.convert_frame.CatchErrorsWrapper object at 0x10fd91eb0> │                                                                   │
│ │                        cleanups = [<function nothing at 0x10e7294e0>]                                    │                                                                   │
│ │                              fn = <bound method Module._wrapped_call_impl of GPT(                        │                                                                   │
│ │                                     vocab_size=32768,                                                    │                                                                   │
│ │                                     dim=96,                                                              │                                                                   │
│ │                                     depth=16,                                                            │                                                                   │
│ │                                     n_heads=6,                                                           │                                                                   │
│ │                                     n_kv_heads=2,                                                        │                                                                   │
│ │                                     context_length=1024,                                                 │                                                                   │
│ │                                     use_gradient_checkpointing=False,                                    │                                                                   │
│ │                                     total_params=3,148,896                                               │                                                                   │
│ │                                   )>                                                                     │                                                                   │
│ │                  is_jit_tracing = <built-in method _is_tracing of PyCapsule object at 0x107769590>       │                                                                   │
│ │                          kwargs = {}                                                                     │                                                                   │
│ │                           prior = None                                                                   │                                                                   │
│ │    prior_skip_guard_eval_unsafe = False                                                                  │                                                                   │
│ │ saved_dynamic_layer_stack_depth = 0                                                                      │                                                                   │
│ │                            self = <torch._dynamo.eval_frame.OptimizeContext object at 0x10ff75be0>       │                                                                   │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                   │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/eval_frame.py:736 in compile_wrapper                                                  │
│                                                                                                                                                                                │
│    733 │   │   │   │   _maybe_set_eval_frame(_callback_from_stance(callback))                                                                                                  │
│    734 │   │   │   │                                                                                                                                                           │
│    735 │   │   │   │   try:                                                                                                                                                    │
│ ❱  736 │   │   │   │   │   return fn(*args, **kwargs)                                                                                                                          │
│    737 │   │   │   │   except Unsupported as e:                                                                                                                                │
│    738 │   │   │   │   │   if config.verbose:                                                                                                                                  │
│    739 │   │   │   │   │   │   raise                                                                                                                                           │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────────────────── locals ─────────────────────────────────────────────────╮                                                                   │
│ │                            args = (                                                                      │                                                                   │
│ │                                   │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   ...,                                                           │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   [   2, 1103,  180,  ...,    0,    0,    0],                    │                                                                   │
│ │                                   │   │   [   2,  330,  345,  ...,    0,    0,    0]]),                  │                                                                   │
│ │                                   │   None                                                               │                                                                   │
│ │                                   )                                                                      │                                                                   │
│ │                        callback = <torch._dynamo.convert_frame.CatchErrorsWrapper object at 0x10fd91eb0> │                                                                   │
│ │                        cleanups = [<function nothing at 0x10e7294e0>]                                    │                                                                   │
│ │                              fn = <bound method Module._wrapped_call_impl of GPT(                        │                                                                   │
│ │                                     vocab_size=32768,                                                    │                                                                   │
│ │                                     dim=96,                                                              │                                                                   │
│ │                                     depth=16,                                                            │                                                                   │
│ │                                     n_heads=6,                                                           │                                                                   │
│ │                                     n_kv_heads=2,                                                        │                                                                   │
│ │                                     context_length=1024,                                                 │                                                                   │
│ │                                     use_gradient_checkpointing=False,                                    │                                                                   │
│ │                                     total_params=3,148,896                                               │                                                                   │
│ │                                   )>                                                                     │                                                                   │
│ │                  is_jit_tracing = <built-in method _is_tracing of PyCapsule object at 0x107769590>       │                                                                   │
│ │                          kwargs = {}                                                                     │                                                                   │
│ │                           prior = None                                                                   │                                                                   │
│ │    prior_skip_guard_eval_unsafe = False                                                                  │                                                                   │
│ │ saved_dynamic_layer_stack_depth = 0                                                                      │                                                                   │
│ │                            self = <torch._dynamo.eval_frame.OptimizeContext object at 0x10ff75be0>       │                                                                   │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                   │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py:1773 in _wrapped_call_impl                                               │
│                                                                                                                                                                                │
│   1770 │   │   if self._compiled_call_impl is not None:                                         ╭───────────────────────────── locals ─────────────────────────────╮           │
│   1771 │   │   │   return self._compiled_call_impl(*args, **kwargs)  # type: ignore[misc]       │   args = (                                                       │           │
│   1772 │   │   else:                                                                            │          │   tensor([[   2,  330,  345,  ...,    0,    0,    0], │           │
│ ❱ 1773 │   │   │   return self._call_impl(*args, **kwargs)                                      │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│   1774 │                                                                                        │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│   1775 │   # torchrec tests the code consistency with the following code                        │          │   │   ...,                                            │           │
│   1776 │   # fmt: off                                                                           │          │   │   [   2,  330,  345,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2, 1103,  180,  ...,    0,    0,    0],     │           │
│                                                                                                 │          │   │   [   2,  330,  345,  ...,    0,    0,    0]]),   │           │
│                                                                                                 │          │   None                                                │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 │ kwargs = {}                                                      │           │
│                                                                                                 │   self = GPT(                                                    │           │
│                                                                                                 │            vocab_size=32768,                                     │           │
│                                                                                                 │            dim=96,                                               │           │
│                                                                                                 │            depth=16,                                             │           │
│                                                                                                 │            n_heads=6,                                            │           │
│                                                                                                 │            n_kv_heads=2,                                         │           │
│                                                                                                 │            context_length=1024,                                  │           │
│                                                                                                 │            use_gradient_checkpointing=False,                     │           │
│                                                                                                 │            total_params=3,148,896                                │           │
│                                                                                                 │          )                                                       │           │
│                                                                                                 ╰──────────────────────────────────────────────────────────────────╯           │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py:1784 in _call_impl                                                       │
│                                                                                                                                                                                │
│   1781 │   │   if not (self._backward_hooks or self._backward_pre_hooks or self._forward_hooks  ╭──────────────────────────────── locals ────────────────────────────────╮     │
│   1782 │   │   │   │   or _global_backward_pre_hooks or _global_backward_hooks                  │         args = (                                                       │     │
│   1783 │   │   │   │   or _global_forward_hooks or _global_forward_pre_hooks):                  │                │   tensor([[   2,  330,  345,  ...,    0,    0,    0], │     │
│ ❱ 1784 │   │   │   return forward_call(*args, **kwargs)                                         │                │   │   [   2,  330,  345,  ...,    0,    0,    0],     │     │
│   1785 │   │                                                                                    │                │   │   [   2,  330,  345,  ...,    0,    0,    0],     │     │
│   1786 │   │   result = None                                                                    │                │   │   ...,                                            │     │
│   1787 │   │   called_always_called_hooks = set()                                               │                │   │   [   2,  330,  345,  ...,    0,    0,    0],     │     │
│                                                                                                 │                │   │   [   2, 1103,  180,  ...,    0,    0,    0],     │     │
│                                                                                                 │                │   │   [   2,  330,  345,  ...,    0,    0,    0]]),   │     │
│                                                                                                 │                │   None                                                │     │
│                                                                                                 │                )                                                       │     │
│                                                                                                 │ forward_call = <bound method GPT.forward of GPT(                       │     │
│                                                                                                 │                  vocab_size=32768,                                     │     │
│                                                                                                 │                  dim=96,                                               │     │
│                                                                                                 │                  depth=16,                                             │     │
│                                                                                                 │                  n_heads=6,                                            │     │
│                                                                                                 │                  n_kv_heads=2,                                         │     │
│                                                                                                 │                  context_length=1024,                                  │     │
│                                                                                                 │                  use_gradient_checkpointing=False,                     │     │
│                                                                                                 │                  total_params=3,148,896                                │     │
│                                                                                                 │                )>                                                      │     │
│                                                                                                 │       kwargs = {}                                                      │     │
│                                                                                                 │         self = GPT(                                                    │     │
│                                                                                                 │                  vocab_size=32768,                                     │     │
│                                                                                                 │                  dim=96,                                               │     │
│                                                                                                 │                  depth=16,                                             │     │
│                                                                                                 │                  n_heads=6,                                            │     │
│                                                                                                 │                  n_kv_heads=2,                                         │     │
│                                                                                                 │                  context_length=1024,                                  │     │
│                                                                                                 │                  use_gradient_checkpointing=False,                     │     │
│                                                                                                 │                  total_params=3,148,896                                │     │
│                                                                                                 │                )                                                       │     │
│                                                                                                 ╰────────────────────────────────────────────────────────────────────────╯     │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:1495 in __call__                                                     │
│                                                                                                                                                                                │
│   1492 │   │                                                                                                                                                                   │
│   1493 │   │   with compile_lock, _disable_current_modes():                                                                                                                    │
│   1494 │   │   │   # skip=1: skip this frame                                                                                                                                   │
│ ❱ 1495 │   │   │   return self._torchdynamo_orig_callable(                                                                                                                     │
│   1496 │   │   │   │   frame, cache_entry, self.hooks, frame_state, skip=1                                                                                                     │
│   1497 │   │   │   )                                                                                                                                                           │
│   1498                                                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────── locals ─────────────────────────────────────────────╮                                                                            │
│ │           cache_entry = None                                                                    │                                                                            │
│ │            ddp_module = None                                                                    │                                                                            │
│ │                 frame = <torch._C._dynamo.eval_frame._PyInterpreterFrame object at 0x127d175f0> │                                                                            │
│ │           frame_state = {'_id': 0}                                                              │                                                                            │
│ │ has_started_execution = False                                                                   │                                                                            │
│ │           is_skipfile = False                                                                   │                                                                            │
│ │                  self = <torch._dynamo.convert_frame.CatchErrorsWrapper object at 0x10fd91eb0>  │                                                                            │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                            │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:1272 in __call__                                                     │
│                                                                                                                                                                                │
│   1269 │   │   input_codes.add(frame.f_code)                                                                                                                                   │
│   1270 │   │   counters["frames"]["total"] += 1                                                                                                                                │
│   1271 │   │   try:                                                                                                                                                            │
│ ❱ 1272 │   │   │   result = self._inner_convert(                                                                                                                               │
│   1273 │   │   │   │   frame, cache_entry, hooks, frame_state, skip=skip + 1                                                                                                   │
│   1274 │   │   │   )                                                                                                                                                           │
│   1275 │   │   │   counters["frames"]["ok"] += 1                                                                                                                               │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────── locals ────────────────────────────────────────╮                                                                                      │
│ │ cache_entry = None                                                                    │                                                                                      │
│ │       frame = <torch._C._dynamo.eval_frame._PyInterpreterFrame object at 0x127d175f0> │                                                                                      │
│ │ frame_state = {'_id': 0}                                                              │                                                                                      │
│ │       hooks = Hooks(guard_export_fn=None, guard_fail_fn=None, guard_filter_fn=None)   │                                                                                      │
│ │        self = <torch._dynamo.convert_frame.ConvertFrame object at 0x10f979100>        │                                                                                      │
│ │        skip = 1                                                                       │                                                                                      │
│ │   soft_fail = False                                                                   │                                                                                      │
│ ╰───────────────────────────────────────────────────────────────────────────────────────╯                                                                                      │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:629 in __call__                                                      │
│                                                                                                                                                                                │
│    626 │   │   │   dynamo_tls.traced_frame_infos.append(info)                                                                                                                  │
│    627 │   │                                                                                                                                                                   │
│    628 │   │   with compile_context(CompileContext(compile_id)):                                                                                                               │
│ ❱  629 │   │   │   return _compile(                                                                                                                                            │
│    630 │   │   │   │   frame.f_code,                                                                                                                                           │
│    631 │   │   │   │   frame.f_globals,                                                                                                                                        │
│    632 │   │   │   │   frame.f_locals,                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │          cache_entry = None                                                                                                                                                │ │
│ │           cache_size = CacheSizeRelevantForFrame(num_cache_entries=0, num_cache_entries_with_same_id_matched_objs=0)                                                       │ │
│ │                 code = <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735>                                   │ │
│ │           compile_id = CompileId(frame_id=0, frame_compile_id=0, compiled_autograd_id=None)                                                                                │ │
│ │ compiled_autograd_id = None                                                                                                                                                │ │
│ │                frame = <torch._C._dynamo.eval_frame._PyInterpreterFrame object at 0x127d175f0>                                                                             │ │
│ │     frame_compile_id = 0                                                                                                                                                   │ │
│ │             frame_id = 0                                                                                                                                                   │ │
│ │          frame_state = {'_id': 0}                                                                                                                                          │ │
│ │                hooks = Hooks(guard_export_fn=None, guard_fail_fn=None, guard_filter_fn=None)                                                                               │ │
│ │                 info = 'forward /Users/dino/Documents/Projects/datasets/src/train/model.py:735'                                                                            │ │
│ │           prev_frame = <frame at 0x111595340, file '/Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/nn/modules/module.py', line 1784,     │ │
│ │                        code _call_impl>                                                                                                                                    │ │
│ │                prior = None                                                                                                                                                │ │
│ │                 self = <torch._dynamo.convert_frame.ConvertFrameAssert object at 0x10f12b950>                                                                              │ │
│ │                 skip = 2                                                                                                                                                   │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:1111 in _compile                                                     │
│                                                                                                                                                                                │
│   1108 │   │   torch._dynamo.utils.ReinplaceCounters.clear()                                                                                                                   │
│   1109 │   │   guarded_code = None                                                                                                                                             │
│   1110 │   │   try:                                                                                                                                                            │
│ ❱ 1111 │   │   │   guarded_code = compile_inner(code, one_graph, hooks, transform)                                                                                             │
│   1112 │   │   │                                                                                                                                                               │
│   1113 │   │   │   # NB: We only put_code_state in success case.  Success case here                                                                                            │
│   1114 │   │   │   # does include graph breaks; specifically, if a graph break still                                                                                           │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │                   builtins = {                                                                                                                                             │ │
│ │                              │   '__name__': 'builtins',                                                                                                                   │ │
│ │                              │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                      │ │
│ │                              │   '__package__': '',                                                                                                                        │ │
│ │                              │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                │ │
│ │                              │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                           │ │
│ │                              │   '__build_class__': <built-in function __build_class__>,                                                                                   │ │
│ │                              │   '__import__': <built-in function __import__>,                                                                                             │ │
│ │                              │   'abs': <built-in function abs>,                                                                                                           │ │
│ │                              │   'all': <built-in function all>,                                                                                                           │ │
│ │                              │   'any': <built-in function any>,                                                                                                           │ │
│ │                              │   ... +147                                                                                                                                  │ │
│ │                              }                                                                                                                                             │ │
│ │                cache_entry = None                                                                                                                                          │ │
│ │                 cache_size = CacheSizeRelevantForFrame(num_cache_entries=0, num_cache_entries_with_same_id_matched_objs=0)                                                 │ │
│ │                    closure = ()                                                                                                                                            │ │
│ │                       code = <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735>                             │ │
│ │               code_context = <contextlib.nullcontext object at 0x15eda8bc0>                                                                                                │ │
│ │                 compile_id = CompileId(frame_id=0, frame_compile_id=0, compiled_autograd_id=None)                                                                          │ │
│ │                 compile_pg = None                                                                                                                                          │ │
│ │                compiler_fn = <torch._dynamo.repro.after_dynamo.WrapBackendDebug object at 0x10c4f9c40>                                                                     │ │
│ │       compliant_custom_ops = set()                                                                                                                                         │ │
│ │       convert_frame_intern = 0                                                                                                                                             │ │
│ │                 curr_frame = 1                                                                                                                                             │ │
│ │          distributed_state = None                                                                                                                                          │ │
│ │ dynamo_time_before_restart = 0.099842                                                                                                                                      │ │
│ │                   exceeded = False                                                                                                                                         │ │
│ │                     export = False                                                                                                                                         │ │
│ │         export_constraints = None                                                                                                                                          │ │
│ │                fail_reason = "backend='inductor' raised:\nValueError: bad value(s) in fds_to_keep"                                                                         │ │
│ │                  fail_type = 'BackendCompilerFailed'                                                                                                                       │ │
│ │   fail_user_frame_filename = None                                                                                                                                          │ │
│ │     fail_user_frame_lineno = None                                                                                                                                          │ │
│ │                      frame = <torch._C._dynamo.eval_frame._PyInterpreterFrame object at 0x127d175f0>                                                                       │ │
│ │                  frame_key = '1'                                                                                                                                           │ │
│ │                frame_state = {'_id': 0}                                                                                                                                    │ │
│ │                    globals = {                                                                                                                                             │ │
│ │                              │   '__name__': 'src.train.model',                                                                                                            │ │
│ │                              │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                     │ │
│ │                              │   '__package__': 'src.train',                                                                                                               │ │
│ │                              │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                        │ │
│ │                              │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                │ │
│ │                              origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                         │ │
│ │                              │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                 │ │
│ │                              │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                       │ │
│ │                              │   '__builtins__': {                                                                                                                         │ │
│ │                              │   │   '__name__': 'builtins',                                                                                                               │ │
│ │                              │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                  │ │
│ │                              │   │   '__package__': '',                                                                                                                    │ │
│ │                              │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                            │ │
│ │                              │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                       │ │
│ │                              │   │   '__build_class__': <built-in function __build_class__>,                                                                               │ │
│ │                              │   │   '__import__': <built-in function __import__>,                                                                                         │ │
│ │                              │   │   'abs': <built-in function abs>,                                                                                                       │ │
│ │                              │   │   'all': <built-in function all>,                                                                                                       │ │
│ │                              │   │   'any': <built-in function any>,                                                                                                       │ │
│ │                              │   │   ... +147                                                                                                                              │ │
│ │                              │   },                                                                                                                                        │ │
│ │                              │   'math': <module 'math' (built-in)>,                                                                                                       │ │
│ │                              │   'dataclass': <function dataclass at 0x10798b880>,                                                                                         │ │
│ │                              │   ... +16                                                                                                                                   │ │
│ │                              }                                                                                                                                             │ │
│ │          graph_input_count = None                                                                                                                                          │ │
│ │           graph_node_count = None                                                                                                                                          │ │
│ │             graph_op_count = None                                                                                                                                          │ │
│ │                guard_count = None                                                                                                                                          │ │
│ │               guarded_code = None                                                                                                                                          │ │
│ │                      hooks = Hooks(guard_export_fn=None, guard_fail_fn=None, guard_filter_fn=None)                                                                         │ │
│ │                 limit_type = ''                                                                                                                                            │ │
│ │                     locals = {                                                                                                                                             │ │
│ │                              │   'self': GPT(                                                                                                                              │ │
│ │                                vocab_size=32768,                                                                                                                           │ │
│ │                                dim=96,                                                                                                                                     │ │
│ │                                depth=16,                                                                                                                                   │ │
│ │                                n_heads=6,                                                                                                                                  │ │
│ │                                n_kv_heads=2,                                                                                                                               │ │
│ │                                context_length=1024,                                                                                                                        │ │
│ │                                use_gradient_checkpointing=False,                                                                                                           │ │
│ │                                total_params=3,148,896                                                                                                                      │ │
│ │                              ),                                                                                                                                            │ │
│ │                              │   'tokens': tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                             │ │
│ │                              │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                           │ │
│ │                              │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                           │ │
│ │                              │   │   ...,                                                                                                                                  │ │
│ │                              │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                           │ │
│ │                              │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                           │ │
│ │                              │   │   [   2,  330,  345,  ...,    0,    0,    0]]),                                                                                         │ │
│ │                              │   'attention_mask': None                                                                                                                    │ │
│ │                              }                                                                                                                                             │ │
│ │                    metrics = {                                                                                                                                             │ │
│ │                              │   'frame_key': '1',                                                                                                                         │ │
│ │                              │   'co_name': 'forward',                                                                                                                     │ │
│ │                              │   'co_filename': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                              │ │
│ │                              │   'co_firstlineno': 735,                                                                                                                    │ │
│ │                              │   'cache_size': 0,                                                                                                                          │ │
│ │                              │   'accumulated_cache_size': 0,                                                                                                              │ │
│ │                              │   'guard_count': None,                                                                                                                      │ │
│ │                              │   'shape_env_guard_count': None,                                                                                                            │ │
│ │                              │   'graph_op_count': None,                                                                                                                   │ │
│ │                              │   'graph_node_count': None,                                                                                                                 │ │
│ │                              │   ... +15                                                                                                                                   │ │
│ │                              }                                                                                                                                             │ │
│ │            metrics_context = <torch._dynamo.metrics_context.MetricsContext object at 0x10e0d04d0>                                                                          │ │
│ │          non_compliant_ops = set()                                                                                                                                         │ │
│ │                  one_graph = False                                                                                                                                         │ │
│ │                     output = None                                                                                                                                          │ │
│ │                    package = None                                                                                                                                          │ │
│ │           recompile_reason = None                                                                                                                                          │ │
│ │            restart_reasons = set()                                                                                                                                         │ │
│ │      shape_env_guard_count = None                                                                                                                                          │ │
│ │                       skip = 3                                                                                                                                             │ │
│ │            speculation_log = SpeculationLog(                                                                                                                               │ │
│ │                              │   entries=[                                                                                                                                 │ │
│ │                              │   │   SpeculationEntry(                                                                                                                     │ │
│ │                              │   │   │   filename='/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                            │ │
│ │                              │   │   │   lineno=754,                                                                                                                       │ │
│ │                              │   │   │   instruction_pointer=8,                                                                                                            │ │
│ │                              │   │   │   inst=Instruction(                                                                                                                 │ │
│ │                              │   │   │   │   opcode=171,                                                                                                                   │ │
│ │                              │   │   │   │   opname='CALL',                                                                                                                │ │
│ │                              │   │   │   │   arg=0,                                                                                                                        │ │
│ │                              │   │   │   │   argval=0,                                                                                                                     │ │
│ │                              │   │   │   │   offset=54,                                                                                                                    │ │
│ │                              │   │   │   │   starts_line=754,                                                                                                              │ │
│ │                              │   │   │   │   is_jump_target=False,                                                                                                         │ │
│ │                              │   │   │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=23),                                            │ │
│ │                              │   │   │   │   target=None,                                                                                                                  │ │
│ │                              │   │   │   │   exn_tab_entry=None,                                                                                                           │ │
│ │                              │   │   │   │   argrepr=None                                                                                                                  │ │
│ │                              │   │   │   ),                                                                                                                                │ │
│ │                              │   │   │   failed=False,                                                                                                                     │ │
│ │                              │   │   │   reason=None                                                                                                                       │ │
│ │                              │   │   )                                                                                                                                     │ │
│ │                              │   ],                                                                                                                                        │ │
│ │                              │   index=1                                                                                                                                   │ │
│ │                              )                                                                                                                                             │ │
│ │              start_time_ns = 1760808444724342000                                                                                                                           │ │
│ │              tf_mode_stack = []                                                                                                                                            │ │
│ │                     tracer = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                  │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_utils_internal.py:97 in wrapper_function                                                     │
│                                                                                                                                                                                │
│    94 │   │   │   # This is not needed but we have it here to avoid having profile_compile_tim                                                                                 │
│    95 │   │   │   # in stack traces when profiling is not enabled.                                                                                                             │
│    96 │   │   │   if not StrobelightCompileTimeProfiler.enabled:                                                                                                               │
│ ❱  97 │   │   │   │   return function(*args, **kwargs)                                                                                                                         │
│    98 │   │   │                                                                                                                                                                │
│    99 │   │   │   return StrobelightCompileTimeProfiler.profile_compile_time(                                                                                                  │
│   100 │   │   │   │   function, phase_name, *args, **kwargs                                                                                                                    │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────── locals ───────────────────────────────────────────────────────────────╮                                        │
│ │       args = (                                                                                                                      │                                        │
│ │              │   <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735>, │                                        │
│ │              │   False,                                                                                                             │                                        │
│ │              │   Hooks(guard_export_fn=None, guard_fail_fn=None, guard_filter_fn=None),                                             │                                        │
│ │              │   <function _compile.<locals>.transform at 0x15ed49f80>                                                              │                                        │
│ │              )                                                                                                                      │                                        │
│ │     kwargs = {}                                                                                                                     │                                        │
│ │ phase_name = 'compile_inner'                                                                                                        │                                        │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                        │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:793 in compile_inner                                                 │
│                                                                                                                                                                                │
│    790 │   │   │   │   )                                                                                                                                                       │
│    791 │   │   │   )                                                                                                                                                           │
│    792 │   │   │   stack.enter_context(CompileTimeInstructionCounter.record())                                                                                                 │
│ ❱  793 │   │   │   return _compile_inner(code, one_graph, hooks, transform)                                                                                                    │
│    794 │   │                                                                                                                                                                   │
│    795 │   │   return (                                                                                                                                                        │
│    796 │   │   │   ConvertFrameReturn()                                                                                                                                        │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────────────────────────── locals ────────────────────────────────────────────────────────────╮                                              │
│ │      code = <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735> │                                              │
│ │     hooks = Hooks(guard_export_fn=None, guard_fail_fn=None, guard_filter_fn=None)                                             │                                              │
│ │ one_graph = False                                                                                                             │                                              │
│ │     stack = <contextlib.ExitStack object at 0x15eda96d0>                                                                      │                                              │
│ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                              │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:832 in _compile_inner                                                │
│                                                                                                                                                                                │
│    829 │   │   │   │   with dynamo_timed(                                                                                                                                      │
│    830 │   │   │   │   │   f"compile_attempt_{attempt}", log_pt2_compile_event=True                                                                                            │
│    831 │   │   │   │   ):                                                                                                                                                      │
│ ❱  832 │   │   │   │   │   out_code = transform_code_object(code, transform)                                                                                                   │
│    833 │   │   │   │   break                                                                                                                                                   │
│    834 │   │   │   except exc.RestartAnalysis as e:                                                                                                                            │
│    835 │   │   │   │   if not isinstance(e, exc.TensorifyScalarRestartAnalysis):                                                                                               │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────────────────────────────── locals ────────────────────────────────────────────────────────────────────╮                             │
│ │                    attempt = 0                                                                                                                 │                             │
│ │                cache_entry = None                                                                                                              │                             │
│ │                       code = <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735> │                             │
│ │                 compile_id = CompileId(frame_id=0, frame_compile_id=0, compiled_autograd_id=None)                                              │                             │
│ │          distributed_state = None                                                                                                              │                             │
│ │ dynamo_time_before_restart = 0.099842                                                                                                          │                             │
│ │                      hooks = Hooks(guard_export_fn=None, guard_fail_fn=None, guard_filter_fn=None)                                             │                             │
│ │    last_attempt_start_time = 1760808444.7243588                                                                                                │                             │
│ │                  one_graph = False                                                                                                             │                             │
│ │                   out_code = None                                                                                                              │                             │
│ │                     output = None                                                                                                              │                             │
│ │                    package = None                                                                                                              │                             │
│ │            restart_reasons = set()                                                                                                             │                             │
│ │                 start_time = 1760808444.7243588                                                                                                │                             │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                             │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/bytecode_transformation.py:1424 in transform_code_object                              │
│                                                                                                                                                                                │
│   1421 │   instructions = cleaned_instructions(code, safe)                                                                                                                     │
│   1422 │   propagate_line_nums(instructions)                                                                                                                                   │
│   1423 │                                                                                                                                                                       │
│ ❱ 1424 │   transformations(instructions, code_options)                                                                                                                         │
│   1425 │   return clean_and_assemble_instructions(instructions, keys, code_options)[1]                                                                                         │
│   1426                                                                                                                                                                         │
│   1427                                                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │         code = <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735>                                           │ │
│ │ code_options = {                                                                                                                                                           │ │
│ │                │   'co_argcount': 3,                                                                                                                                       │ │
│ │                │   'co_posonlyargcount': 0,                                                                                                                                │ │
│ │                │   'co_kwonlyargcount': 0,                                                                                                                                 │ │
│ │                │   'co_nlocals': 15,                                                                                                                                       │ │
│ │                │   'co_stacksize': 9,                                                                                                                                      │ │
│ │                │   'co_flags': 3,                                                                                                                                          │ │
│ │                │   'co_code':                                                                                                                                              │ │
│ │                b'\x97\x00|\x01j\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x02\x00\x00}\x03}\x04|\x01j\x03\x00\x00\x00\x00\x00\x00\x00… │ │
│ │                │   'co_consts': (                                                                                                                                          │ │
│ │                │   │   '\n        Forward pass through the model.\n\n        Args:\n            tokens: (bat'+435,                                                         │ │
│ │                │   │   0,                                                                                                                                                  │ │
│ │                │   │   'Token IDs must be in range [0, ',                                                                                                                  │ │
│ │                │   │   '), got range [',                                                                                                                                   │ │
│ │                │   │   ', ',                                                                                                                                               │ │
│ │                │   │   ']',                                                                                                                                                │ │
│ │                │   │   None,                                                                                                                                               │ │
│ │                │   │   'Expected attention_mask shape ',                                                                                                                   │ │
│ │                │   │   ', got ',                                                                                                                                           │ │
│ │                │   │   1,                                                                                                                                                  │ │
│ │                │   │   ... +6                                                                                                                                              │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   'co_names': ('shape', 'min', 'max', 'vocab_size', 'ValueError', 'item', '_get_causal_mask', 'device', 'unsqueeze', 'token_embedding', ... +14),         │ │
│ │                │   'co_varnames': (                                                                                                                                        │ │
│ │                │   │   'self',                                                                                                                                             │ │
│ │                │   │   'tokens',                                                                                                                                           │ │
│ │                │   │   'attention_mask',                                                                                                                                   │ │
│ │                │   │   'batch_size',                                                                                                                                       │ │
│ │                │   │   'seq_len',                                                                                                                                          │ │
│ │                │   │   'expected_shape',                                                                                                                                   │ │
│ │                │   │   'causal_mask',                                                                                                                                      │ │
│ │                │   │   'combined_mask',                                                                                                                                    │ │
│ │                │   │   'x',                                                                                                                                                │ │
│ │                │   │   'total_aux_loss',                                                                                                                                   │ │
│ │                │   │   ... +5                                                                                                                                              │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   ... +8                                                                                                                                                  │ │
│ │                }                                                                                                                                                           │ │
│ │ instructions = [                                                                                                                                                           │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=151,                                                                                                                                         │ │
│ │                │   │   opname='RESUME',                                                                                                                                    │ │
│ │                │   │   arg=0,                                                                                                                                              │ │
│ │                │   │   argval=0,                                                                                                                                           │ │
│ │                │   │   offset=0,                                                                                                                                           │ │
│ │                │   │   starts_line=735,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=735, end_lineno=735, col_offset=0, end_col_offset=0),                                                                    │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=124,                                                                                                                                         │ │
│ │                │   │   opname='LOAD_FAST',                                                                                                                                 │ │
│ │                │   │   arg=1,                                                                                                                                              │ │
│ │                │   │   argval='tokens',                                                                                                                                    │ │
│ │                │   │   offset=2,                                                                                                                                           │ │
│ │                │   │   starts_line=751,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=30, end_col_offset=36),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=106,                                                                                                                                         │ │
│ │                │   │   opname='LOAD_ATTR',                                                                                                                                 │ │
│ │                │   │   arg=0,                                                                                                                                              │ │
│ │                │   │   argval='shape',                                                                                                                                     │ │
│ │                │   │   offset=4,                                                                                                                                           │ │
│ │                │   │   starts_line=751,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=30, end_col_offset=42),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=92,                                                                                                                                          │ │
│ │                │   │   opname='UNPACK_SEQUENCE',                                                                                                                           │ │
│ │                │   │   arg=2,                                                                                                                                              │ │
│ │                │   │   argval=2,                                                                                                                                           │ │
│ │                │   │   offset=24,                                                                                                                                          │ │
│ │                │   │   starts_line=751,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=8, end_col_offset=27),                                                                   │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=125,                                                                                                                                         │ │
│ │                │   │   opname='STORE_FAST',                                                                                                                                │ │
│ │                │   │   arg=3,                                                                                                                                              │ │
│ │                │   │   argval='batch_size',                                                                                                                                │ │
│ │                │   │   offset=28,                                                                                                                                          │ │
│ │                │   │   starts_line=751,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=8, end_col_offset=18),                                                                   │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=125,                                                                                                                                         │ │
│ │                │   │   opname='STORE_FAST',                                                                                                                                │ │
│ │                │   │   arg=4,                                                                                                                                              │ │
│ │                │   │   argval='seq_len',                                                                                                                                   │ │
│ │                │   │   offset=30,                                                                                                                                          │ │
│ │                │   │   starts_line=751,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=20, end_col_offset=27),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=124,                                                                                                                                         │ │
│ │                │   │   opname='LOAD_FAST',                                                                                                                                 │ │
│ │                │   │   arg=1,                                                                                                                                              │ │
│ │                │   │   argval='tokens',                                                                                                                                    │ │
│ │                │   │   offset=32,                                                                                                                                          │ │
│ │                │   │   starts_line=754,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=17),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=106,                                                                                                                                         │ │
│ │                │   │   opname='LOAD_ATTR',                                                                                                                                 │ │
│ │                │   │   arg=3,                                                                                                                                              │ │
│ │                │   │   argval='min',                                                                                                                                       │ │
│ │                │   │   offset=34,                                                                                                                                          │ │
│ │                │   │   starts_line=754,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=21),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=171,                                                                                                                                         │ │
│ │                │   │   opname='CALL',                                                                                                                                      │ │
│ │                │   │   arg=0,                                                                                                                                              │ │
│ │                │   │   argval=0,                                                                                                                                           │ │
│ │                │   │   offset=54,                                                                                                                                          │ │
│ │                │   │   starts_line=754,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=23),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   Instruction(                                                                                                                                            │ │
│ │                │   │   opcode=100,                                                                                                                                         │ │
│ │                │   │   opname='LOAD_CONST',                                                                                                                                │ │
│ │                │   │   arg=1,                                                                                                                                              │ │
│ │                │   │   argval=0,                                                                                                                                           │ │
│ │                │   │   offset=62,                                                                                                                                          │ │
│ │                │   │   starts_line=754,                                                                                                                                    │ │
│ │                │   │   is_jump_target=False,                                                                                                                               │ │
│ │                │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=26, end_col_offset=27),                                                                  │ │
│ │                │   │   target=None,                                                                                                                                        │ │
│ │                │   │   exn_tab_entry=None,                                                                                                                                 │ │
│ │                │   │   argrepr=None                                                                                                                                        │ │
│ │                │   ),                                                                                                                                                      │ │
│ │                │   ... +252                                                                                                                                                │ │
│ │                ]                                                                                                                                                           │ │
│ │         keys = [                                                                                                                                                           │ │
│ │                │   'co_argcount',                                                                                                                                          │ │
│ │                │   'co_posonlyargcount',                                                                                                                                   │ │
│ │                │   'co_kwonlyargcount',                                                                                                                                    │ │
│ │                │   'co_nlocals',                                                                                                                                           │ │
│ │                │   'co_stacksize',                                                                                                                                         │ │
│ │                │   'co_flags',                                                                                                                                             │ │
│ │                │   'co_code',                                                                                                                                              │ │
│ │                │   'co_consts',                                                                                                                                            │ │
│ │                │   'co_names',                                                                                                                                             │ │
│ │                │   'co_varnames',                                                                                                                                          │ │
│ │                │   ... +8                                                                                                                                                  │ │
│ │                ]                                                                                                                                                           │ │
│ │         safe = False                                                                                                                                                       │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:267 in _fn                                                           │
│                                                                                                                                                                                │
│    264 │   │   │   )                                                                                                                                                           │
│    265 │   │   │   exit_stack.enter_context(torch_function_mode_stack_state_mgr)                                                                                               │
│    266 │   │   │   try:                                                                                                                                                        │
│ ❱  267 │   │   │   │   return fn(*args, **kwargs)                                                                                                                              │
│    268 │   │   │   finally:                                                                                                                                                    │
│    269 │   │   │   │   cleanup.close()                                                                                                                                         │
│    270 │   │   │   │   assert torch._C._len_torch_function_stack() == 0, (                                                                                                     │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │                   allow_tf32 = False                                                                                                                                       │ │
│ │                         args = (                                                                                                                                           │ │
│ │                                │   [                                                                                                                                       │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=151,                                                                                                                     │ │
│ │                                │   │   │   opname='RESUME',                                                                                                                │ │
│ │                                │   │   │   arg=0,                                                                                                                          │ │
│ │                                │   │   │   argval=0,                                                                                                                       │ │
│ │                                │   │   │   offset=0,                                                                                                                       │ │
│ │                                │   │   │   starts_line=735,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=735, end_lineno=735, col_offset=0, end_col_offset=0),                                                │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=124,                                                                                                                     │ │
│ │                                │   │   │   opname='LOAD_FAST',                                                                                                             │ │
│ │                                │   │   │   arg=1,                                                                                                                          │ │
│ │                                │   │   │   argval='tokens',                                                                                                                │ │
│ │                                │   │   │   offset=2,                                                                                                                       │ │
│ │                                │   │   │   starts_line=751,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=30, end_col_offset=36),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=106,                                                                                                                     │ │
│ │                                │   │   │   opname='LOAD_ATTR',                                                                                                             │ │
│ │                                │   │   │   arg=0,                                                                                                                          │ │
│ │                                │   │   │   argval='shape',                                                                                                                 │ │
│ │                                │   │   │   offset=4,                                                                                                                       │ │
│ │                                │   │   │   starts_line=751,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=30, end_col_offset=42),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=92,                                                                                                                      │ │
│ │                                │   │   │   opname='UNPACK_SEQUENCE',                                                                                                       │ │
│ │                                │   │   │   arg=2,                                                                                                                          │ │
│ │                                │   │   │   argval=2,                                                                                                                       │ │
│ │                                │   │   │   offset=24,                                                                                                                      │ │
│ │                                │   │   │   starts_line=751,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=8, end_col_offset=27),                                               │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=125,                                                                                                                     │ │
│ │                                │   │   │   opname='STORE_FAST',                                                                                                            │ │
│ │                                │   │   │   arg=3,                                                                                                                          │ │
│ │                                │   │   │   argval='batch_size',                                                                                                            │ │
│ │                                │   │   │   offset=28,                                                                                                                      │ │
│ │                                │   │   │   starts_line=751,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=8, end_col_offset=18),                                               │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=125,                                                                                                                     │ │
│ │                                │   │   │   opname='STORE_FAST',                                                                                                            │ │
│ │                                │   │   │   arg=4,                                                                                                                          │ │
│ │                                │   │   │   argval='seq_len',                                                                                                               │ │
│ │                                │   │   │   offset=30,                                                                                                                      │ │
│ │                                │   │   │   starts_line=751,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=20, end_col_offset=27),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=124,                                                                                                                     │ │
│ │                                │   │   │   opname='LOAD_FAST',                                                                                                             │ │
│ │                                │   │   │   arg=1,                                                                                                                          │ │
│ │                                │   │   │   argval='tokens',                                                                                                                │ │
│ │                                │   │   │   offset=32,                                                                                                                      │ │
│ │                                │   │   │   starts_line=754,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=17),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=106,                                                                                                                     │ │
│ │                                │   │   │   opname='LOAD_ATTR',                                                                                                             │ │
│ │                                │   │   │   arg=3,                                                                                                                          │ │
│ │                                │   │   │   argval='min',                                                                                                                   │ │
│ │                                │   │   │   offset=34,                                                                                                                      │ │
│ │                                │   │   │   starts_line=754,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=21),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=171,                                                                                                                     │ │
│ │                                │   │   │   opname='CALL',                                                                                                                  │ │
│ │                                │   │   │   arg=0,                                                                                                                          │ │
│ │                                │   │   │   argval=0,                                                                                                                       │ │
│ │                                │   │   │   offset=54,                                                                                                                      │ │
│ │                                │   │   │   starts_line=754,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=23),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   Instruction(                                                                                                                        │ │
│ │                                │   │   │   opcode=100,                                                                                                                     │ │
│ │                                │   │   │   opname='LOAD_CONST',                                                                                                            │ │
│ │                                │   │   │   arg=1,                                                                                                                          │ │
│ │                                │   │   │   argval=0,                                                                                                                       │ │
│ │                                │   │   │   offset=62,                                                                                                                      │ │
│ │                                │   │   │   starts_line=754,                                                                                                                │ │
│ │                                │   │   │   is_jump_target=False,                                                                                                           │ │
│ │                                │   │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=26, end_col_offset=27),                                              │ │
│ │                                │   │   │   target=None,                                                                                                                    │ │
│ │                                │   │   │   exn_tab_entry=None,                                                                                                             │ │
│ │                                │   │   │   argrepr=None                                                                                                                    │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   ... +252                                                                                                                            │ │
│ │                                │   ],                                                                                                                                      │ │
│ │                                │   {                                                                                                                                       │ │
│ │                                │   │   'co_argcount': 3,                                                                                                                   │ │
│ │                                │   │   'co_posonlyargcount': 0,                                                                                                            │ │
│ │                                │   │   'co_kwonlyargcount': 0,                                                                                                             │ │
│ │                                │   │   'co_nlocals': 15,                                                                                                                   │ │
│ │                                │   │   'co_stacksize': 9,                                                                                                                  │ │
│ │                                │   │   'co_flags': 3,                                                                                                                      │ │
│ │                                │   │   'co_code':                                                                                                                          │ │
│ │                                b'\x97\x00|\x01j\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x02\x00\x00}\x03}\x04|\x01j\x03\x00\x00\x00… │ │
│ │                                │   │   'co_consts': (                                                                                                                      │ │
│ │                                │   │   │   '\n        Forward pass through the model.\n\n        Args:\n            tokens: (bat'+435,                                     │ │
│ │                                │   │   │   0,                                                                                                                              │ │
│ │                                │   │   │   'Token IDs must be in range [0, ',                                                                                              │ │
│ │                                │   │   │   '), got range [',                                                                                                               │ │
│ │                                │   │   │   ', ',                                                                                                                           │ │
│ │                                │   │   │   ']',                                                                                                                            │ │
│ │                                │   │   │   None,                                                                                                                           │ │
│ │                                │   │   │   'Expected attention_mask shape ',                                                                                               │ │
│ │                                │   │   │   ', got ',                                                                                                                       │ │
│ │                                │   │   │   1,                                                                                                                              │ │
│ │                                │   │   │   ... +6                                                                                                                          │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   'co_names': (                                                                                                                       │ │
│ │                                │   │   │   'shape',                                                                                                                        │ │
│ │                                │   │   │   'min',                                                                                                                          │ │
│ │                                │   │   │   'max',                                                                                                                          │ │
│ │                                │   │   │   'vocab_size',                                                                                                                   │ │
│ │                                │   │   │   'ValueError',                                                                                                                   │ │
│ │                                │   │   │   'item',                                                                                                                         │ │
│ │                                │   │   │   '_get_causal_mask',                                                                                                             │ │
│ │                                │   │   │   'device',                                                                                                                       │ │
│ │                                │   │   │   'unsqueeze',                                                                                                                    │ │
│ │                                │   │   │   'token_embedding',                                                                                                              │ │
│ │                                │   │   │   ... +14                                                                                                                         │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   'co_varnames': (                                                                                                                    │ │
│ │                                │   │   │   'self',                                                                                                                         │ │
│ │                                │   │   │   'tokens',                                                                                                                       │ │
│ │                                │   │   │   'attention_mask',                                                                                                               │ │
│ │                                │   │   │   'batch_size',                                                                                                                   │ │
│ │                                │   │   │   'seq_len',                                                                                                                      │ │
│ │                                │   │   │   'expected_shape',                                                                                                               │ │
│ │                                │   │   │   'causal_mask',                                                                                                                  │ │
│ │                                │   │   │   'combined_mask',                                                                                                                │ │
│ │                                │   │   │   'x',                                                                                                                            │ │
│ │                                │   │   │   'total_aux_loss',                                                                                                               │ │
│ │                                │   │   │   ... +5                                                                                                                          │ │
│ │                                │   │   ),                                                                                                                                  │ │
│ │                                │   │   ... +8                                                                                                                              │ │
│ │                                │   }                                                                                                                                       │ │
│ │                                )                                                                                                                                           │ │
│ │                      cleanup = <contextlib.ExitStack object at 0x127d60bc0>                                                                                                │ │
│ │               cuda_rng_state = None                                                                                                                                        │ │
│ │  curr_mobile_allocator_state = False                                                                                                                                       │ │
│ │                   exit_stack = <contextlib.ExitStack object at 0x15ed7cdd0>                                                                                                │ │
│ │                       guards = <torch._C._dynamo.guards.GlobalStateGuard object at 0x15ed8a0f0>                                                                            │ │
│ │                       kwargs = {}                                                                                                                                          │ │
│ │          prior_deterministic = False                                                                                                                                       │ │
│ │                  prior_dtype = torch.float32                                                                                                                               │ │
│ │              prior_grad_mode = True                                                                                                                                        │ │
│ │         prior_inference_mode = False                                                                                                                                       │ │
│ │ prior_mobile_allocator_state = False                                                                                                                                       │ │
│ │              prior_warn_only = False                                                                                                                                       │ │
│ │                 py_rng_state = (                                                                                                                                           │ │
│ │                                │   3,                                                                                                                                      │ │
│ │                                │   (4090754677, 2451898871, 2442137196, 1415953302, 3511152177, 1554790662, 2993276218, 3015574753, 2833812591, 111125604, ... +615),      │ │
│ │                                │   None                                                                                                                                    │ │
│ │                                )                                                                                                                                           │ │
│ │              torch_rng_state = tensor([153, 106,  51,  ...,   0,   0,   0], dtype=torch.uint8)                                                                             │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/convert_frame.py:753 in transform                                                     │
│                                                                                                                                                                                │
│    750 │   │   try:                                                                                                                                                            │
│    751 │   │   │   tracer.output.mark_bytecode_tracing_start()                                                                                                                 │
│    752 │   │   │   with tracing(tracer.output.tracing_context), tracer.set_current_tx():                                                                                       │
│ ❱  753 │   │   │   │   tracer.run()                                                                                                                                            │
│    754 │   │   except exc.UnspecializeRestartAnalysis:                                                                                                                         │
│    755 │   │   │   speculation_log.clear()  # type: ignore[has-type]                                                                                                           │
│    756 │   │   │   raise                                                                                                                                                       │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │           builtins = {                                                                                                                                                     │ │
│ │                      │   '__name__': 'builtins',                                                                                                                           │ │
│ │                      │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                              │ │
│ │                      │   '__package__': '',                                                                                                                                │ │
│ │                      │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                        │ │
│ │                      │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                                   │ │
│ │                      │   '__build_class__': <built-in function __build_class__>,                                                                                           │ │
│ │                      │   '__import__': <built-in function __import__>,                                                                                                     │ │
│ │                      │   'abs': <built-in function abs>,                                                                                                                   │ │
│ │                      │   'all': <built-in function all>,                                                                                                                   │ │
│ │                      │   'any': <built-in function any>,                                                                                                                   │ │
│ │                      │   ... +147                                                                                                                                          │ │
│ │                      }                                                                                                                                                     │ │
│ │            closure = ()                                                                                                                                                    │ │
│ │               code = <code object forward at 0xc54ac9e00, file "/Users/dino/Documents/Projects/datasets/src/train/model.py", line 735>                                     │ │
│ │       code_options = {                                                                                                                                                     │ │
│ │                      │   'co_argcount': 3,                                                                                                                                 │ │
│ │                      │   'co_posonlyargcount': 0,                                                                                                                          │ │
│ │                      │   'co_kwonlyargcount': 0,                                                                                                                           │ │
│ │                      │   'co_nlocals': 15,                                                                                                                                 │ │
│ │                      │   'co_stacksize': 9,                                                                                                                                │ │
│ │                      │   'co_flags': 3,                                                                                                                                    │ │
│ │                      │   'co_code':                                                                                                                                        │ │
│ │                      b'\x97\x00|\x01j\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x02\x00\x00}\x03}\x04|\x01j\x03\x00\x00\x00\x00\x00\x… │ │
│ │                      │   'co_consts': (                                                                                                                                    │ │
│ │                      │   │   '\n        Forward pass through the model.\n\n        Args:\n            tokens: (bat'+435,                                                   │ │
│ │                      │   │   0,                                                                                                                                            │ │
│ │                      │   │   'Token IDs must be in range [0, ',                                                                                                            │ │
│ │                      │   │   '), got range [',                                                                                                                             │ │
│ │                      │   │   ', ',                                                                                                                                         │ │
│ │                      │   │   ']',                                                                                                                                          │ │
│ │                      │   │   None,                                                                                                                                         │ │
│ │                      │   │   'Expected attention_mask shape ',                                                                                                             │ │
│ │                      │   │   ', got ',                                                                                                                                     │ │
│ │                      │   │   1,                                                                                                                                            │ │
│ │                      │   │   ... +6                                                                                                                                        │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   'co_names': ('shape', 'min', 'max', 'vocab_size', 'ValueError', 'item', '_get_causal_mask', 'device', 'unsqueeze', 'token_embedding', ... +14),   │ │
│ │                      │   'co_varnames': (                                                                                                                                  │ │
│ │                      │   │   'self',                                                                                                                                       │ │
│ │                      │   │   'tokens',                                                                                                                                     │ │
│ │                      │   │   'attention_mask',                                                                                                                             │ │
│ │                      │   │   'batch_size',                                                                                                                                 │ │
│ │                      │   │   'seq_len',                                                                                                                                    │ │
│ │                      │   │   'expected_shape',                                                                                                                             │ │
│ │                      │   │   'causal_mask',                                                                                                                                │ │
│ │                      │   │   'combined_mask',                                                                                                                              │ │
│ │                      │   │   'x',                                                                                                                                          │ │
│ │                      │   │   'total_aux_loss',                                                                                                                             │ │
│ │                      │   │   ... +5                                                                                                                                        │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   ... +8                                                                                                                                            │ │
│ │                      }                                                                                                                                                     │ │
│ │        compiler_fn = <torch._dynamo.repro.after_dynamo.WrapBackendDebug object at 0x10c4f9c40>                                                                             │ │
│ │  distributed_state = None                                                                                                                                                  │ │
│ │       exn_vt_stack = self._exc_stack=[] - self._current_exception=None                                                                                                     │ │
│ │             export = False                                                                                                                                                 │ │
│ │ export_constraints = None                                                                                                                                                  │ │
│ │        frame_state = {'_id': 0}                                                                                                                                            │ │
│ │            globals = {                                                                                                                                                     │ │
│ │                      │   '__name__': 'src.train.model',                                                                                                                    │ │
│ │                      │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                             │ │
│ │                      │   '__package__': 'src.train',                                                                                                                       │ │
│ │                      │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                                │ │
│ │                      │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                        │ │
│ │                      origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                                 │ │
│ │                      │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                         │ │
│ │                      │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                               │ │
│ │                      │   '__builtins__': {                                                                                                                                 │ │
│ │                      │   │   '__name__': 'builtins',                                                                                                                       │ │
│ │                      │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                          │ │
│ │                      │   │   '__package__': '',                                                                                                                            │ │
│ │                      │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                    │ │
│ │                      │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                               │ │
│ │                      │   │   '__build_class__': <built-in function __build_class__>,                                                                                       │ │
│ │                      │   │   '__import__': <built-in function __import__>,                                                                                                 │ │
│ │                      │   │   'abs': <built-in function abs>,                                                                                                               │ │
│ │                      │   │   'all': <built-in function all>,                                                                                                               │ │
│ │                      │   │   'any': <built-in function any>,                                                                                                               │ │
│ │                      │   │   ... +147                                                                                                                                      │ │
│ │                      │   },                                                                                                                                                │ │
│ │                      │   'math': <module 'math' (built-in)>,                                                                                                               │ │
│ │                      │   'dataclass': <function dataclass at 0x10798b880>,                                                                                                 │ │
│ │                      │   ... +16                                                                                                                                           │ │
│ │                      }                                                                                                                                                     │ │
│ │       instructions = [                                                                                                                                                     │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=151,                                                                                                                                   │ │
│ │                      │   │   opname='RESUME',                                                                                                                              │ │
│ │                      │   │   arg=0,                                                                                                                                        │ │
│ │                      │   │   argval=0,                                                                                                                                     │ │
│ │                      │   │   offset=0,                                                                                                                                     │ │
│ │                      │   │   starts_line=735,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=735, end_lineno=735, col_offset=0, end_col_offset=0),                                                              │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=124,                                                                                                                                   │ │
│ │                      │   │   opname='LOAD_FAST',                                                                                                                           │ │
│ │                      │   │   arg=1,                                                                                                                                        │ │
│ │                      │   │   argval='tokens',                                                                                                                              │ │
│ │                      │   │   offset=2,                                                                                                                                     │ │
│ │                      │   │   starts_line=751,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=30, end_col_offset=36),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=106,                                                                                                                                   │ │
│ │                      │   │   opname='LOAD_ATTR',                                                                                                                           │ │
│ │                      │   │   arg=0,                                                                                                                                        │ │
│ │                      │   │   argval='shape',                                                                                                                               │ │
│ │                      │   │   offset=4,                                                                                                                                     │ │
│ │                      │   │   starts_line=751,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=30, end_col_offset=42),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=92,                                                                                                                                    │ │
│ │                      │   │   opname='UNPACK_SEQUENCE',                                                                                                                     │ │
│ │                      │   │   arg=2,                                                                                                                                        │ │
│ │                      │   │   argval=2,                                                                                                                                     │ │
│ │                      │   │   offset=24,                                                                                                                                    │ │
│ │                      │   │   starts_line=751,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=8, end_col_offset=27),                                                             │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=125,                                                                                                                                   │ │
│ │                      │   │   opname='STORE_FAST',                                                                                                                          │ │
│ │                      │   │   arg=3,                                                                                                                                        │ │
│ │                      │   │   argval='batch_size',                                                                                                                          │ │
│ │                      │   │   offset=28,                                                                                                                                    │ │
│ │                      │   │   starts_line=751,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=8, end_col_offset=18),                                                             │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=125,                                                                                                                                   │ │
│ │                      │   │   opname='STORE_FAST',                                                                                                                          │ │
│ │                      │   │   arg=4,                                                                                                                                        │ │
│ │                      │   │   argval='seq_len',                                                                                                                             │ │
│ │                      │   │   offset=30,                                                                                                                                    │ │
│ │                      │   │   starts_line=751,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=751, end_lineno=751, col_offset=20, end_col_offset=27),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=124,                                                                                                                                   │ │
│ │                      │   │   opname='LOAD_FAST',                                                                                                                           │ │
│ │                      │   │   arg=1,                                                                                                                                        │ │
│ │                      │   │   argval='tokens',                                                                                                                              │ │
│ │                      │   │   offset=32,                                                                                                                                    │ │
│ │                      │   │   starts_line=754,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=17),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=106,                                                                                                                                   │ │
│ │                      │   │   opname='LOAD_ATTR',                                                                                                                           │ │
│ │                      │   │   arg=3,                                                                                                                                        │ │
│ │                      │   │   argval='min',                                                                                                                                 │ │
│ │                      │   │   offset=34,                                                                                                                                    │ │
│ │                      │   │   starts_line=754,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=21),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=171,                                                                                                                                   │ │
│ │                      │   │   opname='CALL',                                                                                                                                │ │
│ │                      │   │   arg=0,                                                                                                                                        │ │
│ │                      │   │   argval=0,                                                                                                                                     │ │
│ │                      │   │   offset=54,                                                                                                                                    │ │
│ │                      │   │   starts_line=754,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=23),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   Instruction(                                                                                                                                      │ │
│ │                      │   │   opcode=100,                                                                                                                                   │ │
│ │                      │   │   opname='LOAD_CONST',                                                                                                                          │ │
│ │                      │   │   arg=1,                                                                                                                                        │ │
│ │                      │   │   argval=0,                                                                                                                                     │ │
│ │                      │   │   offset=62,                                                                                                                                    │ │
│ │                      │   │   starts_line=754,                                                                                                                              │ │
│ │                      │   │   is_jump_target=False,                                                                                                                         │ │
│ │                      │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=26, end_col_offset=27),                                                            │ │
│ │                      │   │   target=None,                                                                                                                                  │ │
│ │                      │   │   exn_tab_entry=None,                                                                                                                           │ │
│ │                      │   │   argrepr=None                                                                                                                                  │ │
│ │                      │   ),                                                                                                                                                │ │
│ │                      │   ... +252                                                                                                                                          │ │
│ │                      ]                                                                                                                                                     │ │
│ │             locals = {                                                                                                                                                     │ │
│ │                      │   'self': GPT(                                                                                                                                      │ │
│ │                        vocab_size=32768,                                                                                                                                   │ │
│ │                        dim=96,                                                                                                                                             │ │
│ │                        depth=16,                                                                                                                                           │ │
│ │                        n_heads=6,                                                                                                                                          │ │
│ │                        n_kv_heads=2,                                                                                                                                       │ │
│ │                        context_length=1024,                                                                                                                                │ │
│ │                        use_gradient_checkpointing=False,                                                                                                                   │ │
│ │                        total_params=3,148,896                                                                                                                              │ │
│ │                      ),                                                                                                                                                    │ │
│ │                      │   'tokens': tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                     │ │
│ │                      │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                   │ │
│ │                      │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                   │ │
│ │                      │   │   ...,                                                                                                                                          │ │
│ │                      │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                   │ │
│ │                      │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                                   │ │
│ │                      │   │   [   2,  330,  345,  ...,    0,    0,    0]]),                                                                                                 │ │
│ │                      │   'attention_mask': None                                                                                                                            │ │
│ │                      }                                                                                                                                                     │ │
│ │          one_graph = False                                                                                                                                                 │ │
│ │             output = None                                                                                                                                                  │ │
│ │            package = None                                                                                                                                                  │ │
│ │    speculation_log = SpeculationLog(                                                                                                                                       │ │
│ │                      │   entries=[                                                                                                                                         │ │
│ │                      │   │   SpeculationEntry(                                                                                                                             │ │
│ │                      │   │   │   filename='/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                    │ │
│ │                      │   │   │   lineno=754,                                                                                                                               │ │
│ │                      │   │   │   instruction_pointer=8,                                                                                                                    │ │
│ │                      │   │   │   inst=Instruction(                                                                                                                         │ │
│ │                      │   │   │   │   opcode=171,                                                                                                                           │ │
│ │                      │   │   │   │   opname='CALL',                                                                                                                        │ │
│ │                      │   │   │   │   arg=0,                                                                                                                                │ │
│ │                      │   │   │   │   argval=0,                                                                                                                             │ │
│ │                      │   │   │   │   offset=54,                                                                                                                            │ │
│ │                      │   │   │   │   starts_line=754,                                                                                                                      │ │
│ │                      │   │   │   │   is_jump_target=False,                                                                                                                 │ │
│ │                      │   │   │   │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=23),                                                    │ │
│ │                      │   │   │   │   target=None,                                                                                                                          │ │
│ │                      │   │   │   │   exn_tab_entry=None,                                                                                                                   │ │
│ │                      │   │   │   │   argrepr=None                                                                                                                          │ │
│ │                      │   │   │   ),                                                                                                                                        │ │
│ │                      │   │   │   failed=False,                                                                                                                             │ │
│ │                      │   │   │   reason=None                                                                                                                               │ │
│ │                      │   │   )                                                                                                                                             │ │
│ │                      │   ],                                                                                                                                                │ │
│ │                      │   index=1                                                                                                                                           │ │
│ │                      )                                                                                                                                                     │ │
│ │      tf_mode_stack = []                                                                                                                                                    │ │
│ │             tracer = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                          │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/symbolic_convert.py:3497 in run                                                       │
│                                                                                                                                                                                │
│   3494 │   │   raise KeyError                                                                                                                                                  │
│   3495 │                                                                                                                                                                       │
│   3496 │   def run(self):                                                                                                                                                      │
│ ❱ 3497 │   │   super().run()                                                                                                                                                   │
│   3498 │                                                                                                                                                                       │
│   3499 │   def should_compile_partial_graph(self):                                                                                                                             │
│   3500 │   │   if sys.version_info >= (3, 11):                                                                                                                                 │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────── locals ───────────────────────────────────────╮                                                                                        │
│ │ self = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0> │                                                                                        │
│ ╰─────────────────────────────────────────────────────────────────────────────────────╯                                                                                        │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/symbolic_convert.py:1363 in run                                                       │
│                                                                                                                                                                                │
│   1360 │   │   │   try:                                                                                                                                                        │
│   1361 │   │   │   │   self.output.push_tx(self)                                                                                                                               │
│   1362 │   │   │   │   self.start_point = self.instruction_pointer                                                                                                             │
│ ❱ 1363 │   │   │   │   while self.step():                                                                                                                                      │
│   1364 │   │   │   │   │   pass                                                                                                                                                │
│   1365 │   │   │   except TensorifyScalarRestartAnalysis:                                                                                                                      │
│   1366 │   │   │   │   raise                                                                                                                                                   │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────── locals ───────────────────────────────────────╮                                                                                        │
│ │ self = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0> │                                                                                        │
│ ╰─────────────────────────────────────────────────────────────────────────────────────╯                                                                                        │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/symbolic_convert.py:1267 in step                                                      │
│                                                                                                                                                                                │
│   1264 │   │   self.update_block_stack(inst)                                                                                                                                   │
│   1265 │   │                                                                                                                                                                   │
│   1266 │   │   try:                                                                                                                                                            │
│ ❱ 1267 │   │   │   self.dispatch_table[inst.opcode](self, inst)                                                                                                                │
│   1268 │   │   │   return not self.output.should_exit                                                                                                                          │
│   1269 │   │   except TensorifyScalarRestartAnalysis:                                                                                                                          │
│   1270 │   │   │   raise                                                                                                                                                       │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────────────── locals ──────────────────────────────────────────────╮                                                                          │
│ │ inst = Instruction(                                                                               │                                                                          │
│ │        │   opcode=115,                                                                            │                                                                          │
│ │        │   opname='POP_JUMP_IF_TRUE',                                                             │                                                                          │
│ │        │   arg=29,                                                                                │                                                                          │
│ │        │   argval=128,                                                                            │                                                                          │
│ │        │   offset=68,                                                                             │                                                                          │
│ │        │   starts_line=754,                                                                       │                                                                          │
│ │        │   is_jump_target=False,                                                                  │                                                                          │
│ │        │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=27),     │                                                                          │
│ │        │   target=Instruction(                                                                    │                                                                          │
│ │        │   │   opcode=116,                                                                        │                                                                          │
│ │        │   │   opname='LOAD_GLOBAL',                                                              │                                                                          │
│ │        │   │   arg=9,                                                                             │                                                                          │
│ │        │   │   argval='ValueError',                                                               │                                                                          │
│ │        │   │   offset=128,                                                                        │                                                                          │
│ │        │   │   starts_line=755,                                                                   │                                                                          │
│ │        │   │   is_jump_target=True,                                                               │                                                                          │
│ │        │   │   positions=Positions(                                                               │                                                                          │
│ │        │   │   │   lineno=755,                                                                    │                                                                          │
│ │        │   │   │   end_lineno=755,                                                                │                                                                          │
│ │        │   │   │   col_offset=18,                                                                 │                                                                          │
│ │        │   │   │   end_col_offset=28                                                              │                                                                          │
│ │        │   │   ),                                                                                 │                                                                          │
│ │        │   │   target=None,                                                                       │                                                                          │
│ │        │   │   exn_tab_entry=None,                                                                │                                                                          │
│ │        │   │   argrepr=None                                                                       │                                                                          │
│ │        │   ),                                                                                     │                                                                          │
│ │        │   exn_tab_entry=None,                                                                    │                                                                          │
│ │        │   argrepr='to 128'                                                                       │                                                                          │
│ │        )                                                                                          │                                                                          │
│ │   ip = 11                                                                                         │                                                                          │
│ │ self = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>               │                                                                          │
│ ╰───────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                          │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/symbolic_convert.py:726 in inner                                                      │
│                                                                                                                                                                                │
│    723 │   │   elif (                                                                                                                                                          │
│    724 │   │   │   isinstance(value, (TensorVariable)) and self.should_compile_partial_graph()                                                                                 │
│    725 │   │   ):                                                                                                                                                              │
│ ❱  726 │   │   │   jump_graph_break(self, inst, value)                                                                                                                         │
│    727 │   │   elif isinstance(value, NNModuleVariable):                                                                                                                       │
│    728 │   │   │   # Equivalent of "self.nn_module is not None"                                                                                                                │
│    729 │   │   │   mod = self.output.get_submodule(value.module_key)                                                                                                           │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────── locals ───────────────────────────────────────────────────────────────────────────╮                │
│ │ _explanation = 'Detected data-dependent branching (e.g. `if my_tensor.sum() > 0:`). Dynamo does '+41                                                        │                │
│ │     _gb_type = 'Data-dependent branching'                                                                                                                   │                │
│ │       _hints = ['This graph break is fundamental - it is unlikely that Dynamo will ever be able t'+57, 'Use `torch.cond` to express dynamic control flow.'] │                │
│ │         inst = Instruction(                                                                                                                                 │                │
│ │                │   opcode=115,                                                                                                                              │                │
│ │                │   opname='POP_JUMP_IF_TRUE',                                                                                                               │                │
│ │                │   arg=29,                                                                                                                                  │                │
│ │                │   argval=128,                                                                                                                              │                │
│ │                │   offset=68,                                                                                                                               │                │
│ │                │   starts_line=754,                                                                                                                         │                │
│ │                │   is_jump_target=False,                                                                                                                    │                │
│ │                │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=27),                                                       │                │
│ │                │   target=Instruction(                                                                                                                      │                │
│ │                │   │   opcode=116,                                                                                                                          │                │
│ │                │   │   opname='LOAD_GLOBAL',                                                                                                                │                │
│ │                │   │   arg=9,                                                                                                                               │                │
│ │                │   │   argval='ValueError',                                                                                                                 │                │
│ │                │   │   offset=128,                                                                                                                          │                │
│ │                │   │   starts_line=755,                                                                                                                     │                │
│ │                │   │   is_jump_target=True,                                                                                                                 │                │
│ │                │   │   positions=Positions(lineno=755, end_lineno=755, col_offset=18, end_col_offset=28),                                                   │                │
│ │                │   │   target=None,                                                                                                                         │                │
│ │                │   │   exn_tab_entry=None,                                                                                                                  │                │
│ │                │   │   argrepr=None                                                                                                                         │                │
│ │                │   ),                                                                                                                                       │                │
│ │                │   exn_tab_entry=None,                                                                                                                      │                │
│ │                │   argrepr='to 128'                                                                                                                         │                │
│ │                )                                                                                                                                            │                │
│ │         push = False                                                                                                                                        │                │
│ │         self = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                 │                │
│ │     truth_fn = <built-in function truth>                                                                                                                    │                │
│ │        value = TensorVariable()                                                                                                                             │                │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/symbolic_convert.py:609 in jump_graph_break                                           │
│                                                                                                                                                                                │
│    606 │   │                                                                                                                                                                   │
│    607 │   │   self.push(value)                                                                                                                                                │
│    608 │   │   log.debug("generic_jump triggered compile")                                                                                                                     │
│ ❱  609 │   │   all_stack_locals_metadata = self.output.compile_subgraph(                                                                                                       │
│    610 │   │   │   self,                                                                                                                                                       │
│    611 │   │   │   reason=GraphCompileReason(                                                                                                                                  │
│    612 │   │   │   │   f"generic_jump {typestr(value)}{extra_msg}", [self.frame_summary()]                                                                                     │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────── locals ───────────────────────────────────────────────────────────────────────────╮                │
│ │ _explanation = 'Detected data-dependent branching (e.g. `if my_tensor.sum() > 0:`). Dynamo does '+41                                                        │                │
│ │     _gb_type = 'Data-dependent branching'                                                                                                                   │                │
│ │       _hints = ['This graph break is fundamental - it is unlikely that Dynamo will ever be able t'+57, 'Use `torch.cond` to express dynamic control flow.'] │                │
│ │    extra_msg = ''                                                                                                                                           │                │
│ │         inst = Instruction(                                                                                                                                 │                │
│ │                │   opcode=115,                                                                                                                              │                │
│ │                │   opname='POP_JUMP_IF_TRUE',                                                                                                               │                │
│ │                │   arg=29,                                                                                                                                  │                │
│ │                │   argval=128,                                                                                                                              │                │
│ │                │   offset=68,                                                                                                                               │                │
│ │                │   starts_line=754,                                                                                                                         │                │
│ │                │   is_jump_target=False,                                                                                                                    │                │
│ │                │   positions=Positions(lineno=754, end_lineno=754, col_offset=11, end_col_offset=27),                                                       │                │
│ │                │   target=Instruction(                                                                                                                      │                │
│ │                │   │   opcode=116,                                                                                                                          │                │
│ │                │   │   opname='LOAD_GLOBAL',                                                                                                                │                │
│ │                │   │   arg=9,                                                                                                                               │                │
│ │                │   │   argval='ValueError',                                                                                                                 │                │
│ │                │   │   offset=128,                                                                                                                          │                │
│ │                │   │   starts_line=755,                                                                                                                     │                │
│ │                │   │   is_jump_target=True,                                                                                                                 │                │
│ │                │   │   positions=Positions(lineno=755, end_lineno=755, col_offset=18, end_col_offset=28),                                                   │                │
│ │                │   │   target=None,                                                                                                                         │                │
│ │                │   │   exn_tab_entry=None,                                                                                                                  │                │
│ │                │   │   argrepr=None                                                                                                                         │                │
│ │                │   ),                                                                                                                                       │                │
│ │                │   exn_tab_entry=None,                                                                                                                      │                │
│ │                │   argrepr='to 128'                                                                                                                         │                │
│ │                )                                                                                                                                            │                │
│ │         push = False                                                                                                                                        │                │
│ │         self = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                 │                │
│ │        value = TensorVariable()                                                                                                                             │                │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/output_graph.py:1422 in compile_subgraph                                              │
│                                                                                                                                                                                │
│   1419 │   │   │   output = []                                                                                                                                                 │
│   1420 │   │   │   if count_calls(self.graph) != 0 or len(pass2.graph_outputs) != 0:                                                                                           │
│   1421 │   │   │   │   output.extend(                                                                                                                                          │
│ ❱ 1422 │   │   │   │   │   self.compile_and_call_fx_graph(tx, pass2.graph_output_vars(), root)                                                                                 │
│   1423 │   │   │   │   )                                                                                                                                                       │
│   1424 │   │   │   │                                                                                                                                                           │
│   1425 │   │   │   │   if len(pass2.graph_outputs) != 0:                                                                                                                       │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │             alias_insts = []                                                                                                                                               │ │
│ │        all_restore_vars = [['batch_size', 'seq_len']]                                                                                                                      │ │
│ │  all_stack_locals_metas = [StackLocalsMetadata(stack_null_idxes=[], locals_null_keys=[], stack_ctx_args=[], stack_ctx_idxes_orig=[], locals_ctx_args=[])]                  │ │
│ │        all_stack_values = [[TensorVariable(), ConstantVariable(int: 32), ConstantVariable(int: 1024)]]                                                                     │ │
│ │                  cur_tx = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                     │ │
│ │        graph_output_var = 'graph_out_0'                                                                                                                                    │ │
│ │                    inst = Instruction(                                                                                                                                     │ │
│ │                           │   opcode=151,                                                                                                                                  │ │
│ │                           │   opname='RESUME',                                                                                                                             │ │
│ │                           │   arg=0,                                                                                                                                       │ │
│ │                           │   argval=0,                                                                                                                                    │ │
│ │                           │   offset=0,                                                                                                                                    │ │
│ │                           │   starts_line=735,                                                                                                                             │ │
│ │                           │   is_jump_target=False,                                                                                                                        │ │
│ │                           │   positions=Positions(lineno=735, end_lineno=735, col_offset=0, end_col_offset=0),                                                             │ │
│ │                           │   target=None,                                                                                                                                 │ │
│ │                           │   exn_tab_entry=None,                                                                                                                          │ │
│ │                           │   argrepr=None                                                                                                                                 │ │
│ │                           )                                                                                                                                                │ │
│ │                    meta = StackLocalsMetadata(stack_null_idxes=[], locals_null_keys=[], stack_ctx_args=[], stack_ctx_idxes_orig=[], locals_ctx_args=[])                    │ │
│ │      nn_modules_proxies = {}                                                                                                                                               │ │
│ │                  output = []                                                                                                                                               │ │
│ │      overridden_sources = {}                                                                                                                                               │ │
│ │         partial_convert = False                                                                                                                                            │ │
│ │                   pass1 = <torch._dynamo.codegen.PyCodegen object at 0x15f0c0620>                                                                                          │ │
│ │                   pass2 = <torch._dynamo.codegen.PyCodegen object at 0x15f0c0110>                                                                                          │ │
│ │            prefix_insts = [                                                                                                                                                │ │
│ │                           │   Instruction(                                                                                                                                 │ │
│ │                           │   │   opcode=151,                                                                                                                              │ │
│ │                           │   │   opname='RESUME',                                                                                                                         │ │
│ │                           │   │   arg=0,                                                                                                                                   │ │
│ │                           │   │   argval=0,                                                                                                                                │ │
│ │                           │   │   offset=0,                                                                                                                                │ │
│ │                           │   │   starts_line=735,                                                                                                                         │ │
│ │                           │   │   is_jump_target=False,                                                                                                                    │ │
│ │                           │   │   positions=Positions(lineno=735, end_lineno=735, col_offset=0, end_col_offset=0),                                                         │ │
│ │                           │   │   target=None,                                                                                                                             │ │
│ │                           │   │   exn_tab_entry=None,                                                                                                                      │ │
│ │                           │   │   argrepr=None                                                                                                                             │ │
│ │                           │   )                                                                                                                                            │ │
│ │                           ]                                                                                                                                                │ │
│ │                  reason = GraphCompileReason(                                                                                                                              │ │
│ │                           │   reason='generic_jump TensorVariable()',                                                                                                      │ │
│ │                           │   user_stack=[<FrameSummary file /Users/dino/Documents/Projects/datasets/src/train/model.py, line 754 in forward>],                            │ │
│ │                           │   graph_break=True                                                                                                                             │ │
│ │                           )                                                                                                                                                │ │
│ │            restore_vars = ['batch_size', 'seq_len']                                                                                                                        │ │
│ │                    root = FakeRootModule(...)                                                                                                                              │ │
│ │       root_stack_values = [TensorVariable(), ConstantVariable(int: 32), ConstantVariable(int: 1024)]                                                                       │ │
│ │                    self = OutputGraph(                                                                                                                                     │ │
│ │                           │   local_scope={},                                                                                                                              │ │
│ │                           │   global_scope={                                                                                                                               │ │
│ │                           │   │   '__name__': 'src.train.model',                                                                                                           │ │
│ │                           │   │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                    │ │
│ │                           │   │   '__package__': 'src.train',                                                                                                              │ │
│ │                           │   │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                       │ │
│ │                           │   │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,               │ │
│ │                           origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                            │ │
│ │                           │   │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                │ │
│ │                           │   │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                      │ │
│ │                           │   │   '__builtins__': {                                                                                                                        │ │
│ │                           │   │   │   '__name__': 'builtins',                                                                                                              │ │
│ │                           │   │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                 │ │
│ │                           │   │   │   '__package__': '',                                                                                                                   │ │
│ │                           │   │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                           │ │
│ │                           │   │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                      │ │
│ │                           │   │   │   '__build_class__': <built-in function __build_class__>,                                                                              │ │
│ │                           │   │   │   '__import__': <built-in function __import__>,                                                                                        │ │
│ │                           │   │   │   'abs': <built-in function abs>,                                                                                                      │ │
│ │                           │   │   │   'all': <built-in function all>,                                                                                                      │ │
│ │                           │   │   │   'any': <built-in function any>,                                                                                                      │ │
│ │                           │   │   │   ... +147                                                                                                                             │ │
│ │                           │   │   },                                                                                                                                       │ │
│ │                           │   │   'math': <module 'math' (built-in)>,                                                                                                      │ │
│ │                           │   │   'dataclass': <function dataclass at 0x10798b880>,                                                                                        │ │
│ │                           │   │   ... +16                                                                                                                                  │ │
│ │                           │   },                                                                                                                                           │ │
│ │                           │   torch_function_mode_stack=[],                                                                                                                │ │
│ │                           │   guard_on_key_order=set(),                                                                                                                    │ │
│ │                           │   input_source_to_sizes_strides={                                                                                                              │ │
│ │                           │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False): {                                        │ │
│ │                           │   │   │   'size': torch.Size([32, 1024]),                                                                                                      │ │
│ │                           │   │   │   'stride': (1024, 1)                                                                                                                  │ │
│ │                           │   │   }                                                                                                                                        │ │
│ │                           │   },                                                                                                                                           │ │
│ │                           │   dual_level=-1,                                                                                                                               │ │
│ │                           │   functorch_layers=[],                                                                                                                         │ │
│ │                           │   current_device=None,                                                                                                                         │ │
│ │                           │   export=False,                                                                                                                                │ │
│ │                           │   export_constraints=None,                                                                                                                     │ │
│ │                           │   _guards=None,                                                                                                                                │ │
│ │                           │   _aotautograd_guards=None                                                                                                                     │ │
│ │                           )                                                                                                                                                │ │
│ │              stack_pops = 1                                                                                                                                                │ │
│ │            stack_values = [TensorVariable(), ConstantVariable(int: 32), ConstantVariable(int: 1024)]                                                                       │ │
│ │       stack_values_flat = [TensorVariable(), ConstantVariable(int: 32), ConstantVariable(int: 1024)]                                                                       │ │
│ │ stored_graph_output_var = False                                                                                                                                            │ │
│ │                tempvars = {}                                                                                                                                               │ │
│ │                      tx = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                     │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/output_graph.py:1696 in compile_and_call_fx_graph                                     │
│                                                                                                                                                                                │
│   1693 │   │   │   │   self.tracing_context.fake_mode = backend_fake_mode                                                                                                      │
│   1694 │   │   │                                                                                                                                                               │
│   1695 │   │   │   with self.restore_global_state():                                                                                                                           │
│ ❱ 1696 │   │   │   │   compiled_fn = self.call_user_compiler(gm, self.example_inputs())                                                                                        │
│   1697 │   │   │                                                                                                                                                               │
│   1698 │   │   │   from torch.fx._lazy_graph_module import _LazyGraphModule                                                                                                    │
│   1699                                                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │           _config = <module 'torch._functorch.config' from '/Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/config.py'>        │ │
│ │ backend_fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                                                                                   │ │
│ │                gm = GraphModule()                                                                                                                                          │ │
│ │              name = '__compiled_fn_1_5ab4c3c6_4970_4955_95fa_5beeed0dcec8'                                                                                                 │ │
│ │            ncalls = 2                                                                                                                                                      │ │
│ │     old_fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x10c65c7d0>                                                                                   │ │
│ │       output_node = output                                                                                                                                                 │ │
│ │              root = FakeRootModule(...)                                                                                                                                    │ │
│ │                rv = [TensorVariable()]                                                                                                                                     │ │
│ │              self = OutputGraph(                                                                                                                                           │ │
│ │                     │   local_scope={},                                                                                                                                    │ │
│ │                     │   global_scope={                                                                                                                                     │ │
│ │                     │   │   '__name__': 'src.train.model',                                                                                                                 │ │
│ │                     │   │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                          │ │
│ │                     │   │   '__package__': 'src.train',                                                                                                                    │ │
│ │                     │   │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                             │ │
│ │                     │   │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                     │ │
│ │                     origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                                  │ │
│ │                     │   │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                      │ │
│ │                     │   │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                            │ │
│ │                     │   │   '__builtins__': {                                                                                                                              │ │
│ │                     │   │   │   '__name__': 'builtins',                                                                                                                    │ │
│ │                     │   │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                       │ │
│ │                     │   │   │   '__package__': '',                                                                                                                         │ │
│ │                     │   │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                 │ │
│ │                     │   │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                            │ │
│ │                     │   │   │   '__build_class__': <built-in function __build_class__>,                                                                                    │ │
│ │                     │   │   │   '__import__': <built-in function __import__>,                                                                                              │ │
│ │                     │   │   │   'abs': <built-in function abs>,                                                                                                            │ │
│ │                     │   │   │   'all': <built-in function all>,                                                                                                            │ │
│ │                     │   │   │   'any': <built-in function any>,                                                                                                            │ │
│ │                     │   │   │   ... +147                                                                                                                                   │ │
│ │                     │   │   },                                                                                                                                             │ │
│ │                     │   │   'math': <module 'math' (built-in)>,                                                                                                            │ │
│ │                     │   │   'dataclass': <function dataclass at 0x10798b880>,                                                                                              │ │
│ │                     │   │   ... +16                                                                                                                                        │ │
│ │                     │   },                                                                                                                                                 │ │
│ │                     │   torch_function_mode_stack=[],                                                                                                                      │ │
│ │                     │   guard_on_key_order=set(),                                                                                                                          │ │
│ │                     │   input_source_to_sizes_strides={                                                                                                                    │ │
│ │                     │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False): {                                              │ │
│ │                     │   │   │   'size': torch.Size([32, 1024]),                                                                                                            │ │
│ │                     │   │   │   'stride': (1024, 1)                                                                                                                        │ │
│ │                     │   │   }                                                                                                                                              │ │
│ │                     │   },                                                                                                                                                 │ │
│ │                     │   dual_level=-1,                                                                                                                                     │ │
│ │                     │   functorch_layers=[],                                                                                                                               │ │
│ │                     │   current_device=None,                                                                                                                               │ │
│ │                     │   export=False,                                                                                                                                      │ │
│ │                     │   export_constraints=None,                                                                                                                           │ │
│ │                     │   _guards=None,                                                                                                                                      │ │
│ │                     │   _aotautograd_guards=None                                                                                                                           │ │
│ │                     )                                                                                                                                                      │ │
│ │           sub_gms = {}                                                                                                                                                     │ │
│ │                tx = <torch._dynamo.symbolic_convert.InstructionTranslator object at 0x15ed7cda0>                                                                           │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/output_graph.py:1811 in call_user_compiler                                            │
│                                                                                                                                                                                │
│   1808 │   │   │   waitcounter_name_override="compile_aot_autograd",                                                                                                           │
│   1809 │   │   │   dynamo_compile_column_us="aot_autograd_cumulative_compile_time_us",                                                                                         │
│   1810 │   │   ):                                                                                                                                                              │
│ ❱ 1811 │   │   │   return self._call_user_compiler(gm, example_inputs)                                                                                                         │
│   1812 │                                                                                                                                                                       │
│   1813 │   def _call_user_compiler(                                                                                                                                            │
│   1814 │   │   self, gm: fx.GraphModule, example_inputs: list[Tensor]                                                                                                          │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │ example_inputs = [                                                                                                                                                         │ │
│ │                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                                   │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   ...,                                                                                                                                              │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                                      │ │
│ │                  ]                                                                                                                                                         │ │
│ │             gm = GraphModule()                                                                                                                                             │ │
│ │           self = OutputGraph(                                                                                                                                              │ │
│ │                  │   local_scope={},                                                                                                                                       │ │
│ │                  │   global_scope={                                                                                                                                        │ │
│ │                  │   │   '__name__': 'src.train.model',                                                                                                                    │ │
│ │                  │   │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                             │ │
│ │                  │   │   '__package__': 'src.train',                                                                                                                       │ │
│ │                  │   │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                                │ │
│ │                  │   │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                        │ │
│ │                  origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                                     │ │
│ │                  │   │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                         │ │
│ │                  │   │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                               │ │
│ │                  │   │   '__builtins__': {                                                                                                                                 │ │
│ │                  │   │   │   '__name__': 'builtins',                                                                                                                       │ │
│ │                  │   │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                          │ │
│ │                  │   │   │   '__package__': '',                                                                                                                            │ │
│ │                  │   │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                    │ │
│ │                  │   │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                               │ │
│ │                  │   │   │   '__build_class__': <built-in function __build_class__>,                                                                                       │ │
│ │                  │   │   │   '__import__': <built-in function __import__>,                                                                                                 │ │
│ │                  │   │   │   'abs': <built-in function abs>,                                                                                                               │ │
│ │                  │   │   │   'all': <built-in function all>,                                                                                                               │ │
│ │                  │   │   │   'any': <built-in function any>,                                                                                                               │ │
│ │                  │   │   │   ... +147                                                                                                                                      │ │
│ │                  │   │   },                                                                                                                                                │ │
│ │                  │   │   'math': <module 'math' (built-in)>,                                                                                                               │ │
│ │                  │   │   'dataclass': <function dataclass at 0x10798b880>,                                                                                                 │ │
│ │                  │   │   ... +16                                                                                                                                           │ │
│ │                  │   },                                                                                                                                                    │ │
│ │                  │   torch_function_mode_stack=[],                                                                                                                         │ │
│ │                  │   guard_on_key_order=set(),                                                                                                                             │ │
│ │                  │   input_source_to_sizes_strides={                                                                                                                       │ │
│ │                  │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False): {                                                 │ │
│ │                  │   │   │   'size': torch.Size([32, 1024]),                                                                                                               │ │
│ │                  │   │   │   'stride': (1024, 1)                                                                                                                           │ │
│ │                  │   │   }                                                                                                                                                 │ │
│ │                  │   },                                                                                                                                                    │ │
│ │                  │   dual_level=-1,                                                                                                                                        │ │
│ │                  │   functorch_layers=[],                                                                                                                                  │ │
│ │                  │   current_device=None,                                                                                                                                  │ │
│ │                  │   export=False,                                                                                                                                         │ │
│ │                  │   export_constraints=None,                                                                                                                              │ │
│ │                  │   _guards=None,                                                                                                                                         │ │
│ │                  │   _aotautograd_guards=None                                                                                                                              │ │
│ │                  )                                                                                                                                                         │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/output_graph.py:1871 in _call_user_compiler                                           │
│                                                                                                                                                                                │
│   1868 │   │   │   # aborting execution.                                                                                                                                       │
│   1869 │   │   │   raise e                                                                                                                                                     │
│   1870 │   │   except Exception as e:                                                                                                                                          │
│ ❱ 1871 │   │   │   raise BackendCompilerFailed(                                                                                                                                │
│   1872 │   │   │   │   self.compiler_fn, e, inspect.currentframe()                                                                                                             │
│   1873 │   │   │   ).with_traceback(e.__traceback__) from None                                                                                                                 │
│   1874                                                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │            arg = GraphArg(                                                                                                                                                 │ │
│ │                  │   source=LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False),                                                │ │
│ │                  │   _example=<torch.utils.weak.TensorWeakRef object at 0x15edabaa0>,                                                                                      │ │
│ │                  │   pass_arg_as_tensor=False,                                                                                                                             │ │
│ │                  │   fake_tensor=FakeTensor(..., size=(32, 1024), dtype=torch.int64),                                                                                      │ │
│ │                  │   is_tensor=True,                                                                                                                                       │ │
│ │                  │   example_strong_ref=None                                                                                                                               │ │
│ │                  )                                                                                                                                                         │ │
│ │    compiler_fn = <torch._dynamo.repro.after_dynamo.WrapBackendDebug object at 0x10c4f9c40>                                                                                 │ │
│ │ example_inputs = [                                                                                                                                                         │ │
│ │                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                                   │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   ...,                                                                                                                                              │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                                      │ │
│ │                  ]                                                                                                                                                         │ │
│ │             gm = GraphModule()                                                                                                                                             │ │
│ │           name = 'inductor'                                                                                                                                                │ │
│ │           node = output                                                                                                                                                    │ │
│ │             pl = l_tokens_                                                                                                                                                 │ │
│ │   placeholders = [l_tokens_]                                                                                                                                               │ │
│ │           self = OutputGraph(                                                                                                                                              │ │
│ │                  │   local_scope={},                                                                                                                                       │ │
│ │                  │   global_scope={                                                                                                                                        │ │
│ │                  │   │   '__name__': 'src.train.model',                                                                                                                    │ │
│ │                  │   │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                             │ │
│ │                  │   │   '__package__': 'src.train',                                                                                                                       │ │
│ │                  │   │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                                │ │
│ │                  │   │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                        │ │
│ │                  origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                                     │ │
│ │                  │   │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                         │ │
│ │                  │   │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                               │ │
│ │                  │   │   '__builtins__': {                                                                                                                                 │ │
│ │                  │   │   │   '__name__': 'builtins',                                                                                                                       │ │
│ │                  │   │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                          │ │
│ │                  │   │   │   '__package__': '',                                                                                                                            │ │
│ │                  │   │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                    │ │
│ │                  │   │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                               │ │
│ │                  │   │   │   '__build_class__': <built-in function __build_class__>,                                                                                       │ │
│ │                  │   │   │   '__import__': <built-in function __import__>,                                                                                                 │ │
│ │                  │   │   │   'abs': <built-in function abs>,                                                                                                               │ │
│ │                  │   │   │   'all': <built-in function all>,                                                                                                               │ │
│ │                  │   │   │   'any': <built-in function any>,                                                                                                               │ │
│ │                  │   │   │   ... +147                                                                                                                                      │ │
│ │                  │   │   },                                                                                                                                                │ │
│ │                  │   │   'math': <module 'math' (built-in)>,                                                                                                               │ │
│ │                  │   │   'dataclass': <function dataclass at 0x10798b880>,                                                                                                 │ │
│ │                  │   │   ... +16                                                                                                                                           │ │
│ │                  │   },                                                                                                                                                    │ │
│ │                  │   torch_function_mode_stack=[],                                                                                                                         │ │
│ │                  │   guard_on_key_order=set(),                                                                                                                             │ │
│ │                  │   input_source_to_sizes_strides={                                                                                                                       │ │
│ │                  │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False): {                                                 │ │
│ │                  │   │   │   'size': torch.Size([32, 1024]),                                                                                                               │ │
│ │                  │   │   │   'stride': (1024, 1)                                                                                                                           │ │
│ │                  │   │   }                                                                                                                                                 │ │
│ │                  │   },                                                                                                                                                    │ │
│ │                  │   dual_level=-1,                                                                                                                                        │ │
│ │                  │   functorch_layers=[],                                                                                                                                  │ │
│ │                  │   current_device=None,                                                                                                                                  │ │
│ │                  │   export=False,                                                                                                                                         │ │
│ │                  │   export_constraints=None,                                                                                                                              │ │
│ │                  │   _guards=None,                                                                                                                                         │ │
│ │                  │   _aotautograd_guards=None                                                                                                                              │ │
│ │                  )                                                                                                                                                         │ │
│ │            tot = 2                                                                                                                                                         │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/output_graph.py:1846 in _call_user_compiler                                           │
│                                                                                                                                                                                │
│   1843 │   │   │   compiler_fn = self.compiler_fn                                                                                                                              │
│   1844 │   │   │   if config.verify_correctness:                                                                                                                               │
│   1845 │   │   │   │   compiler_fn = WrapperBackend(compiler_fn)                                                                                                               │
│ ❱ 1846 │   │   │   compiled_fn = compiler_fn(gm, example_inputs)                                                                                                               │
│   1847 │   │   │   _step_logger()(logging.INFO, f"done compiler function {name}")                                                                                              │
│   1848 │   │   │   assert callable(compiled_fn), "compiler_fn did not return callable"                                                                                         │
│   1849 │   │   except (TensorifyScalarRestartAnalysis, ShortenTraceback):                                                                                                      │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │            arg = GraphArg(                                                                                                                                                 │ │
│ │                  │   source=LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False),                                                │ │
│ │                  │   _example=<torch.utils.weak.TensorWeakRef object at 0x15edabaa0>,                                                                                      │ │
│ │                  │   pass_arg_as_tensor=False,                                                                                                                             │ │
│ │                  │   fake_tensor=FakeTensor(..., size=(32, 1024), dtype=torch.int64),                                                                                      │ │
│ │                  │   is_tensor=True,                                                                                                                                       │ │
│ │                  │   example_strong_ref=None                                                                                                                               │ │
│ │                  )                                                                                                                                                         │ │
│ │    compiler_fn = <torch._dynamo.repro.after_dynamo.WrapBackendDebug object at 0x10c4f9c40>                                                                                 │ │
│ │ example_inputs = [                                                                                                                                                         │ │
│ │                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                                   │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   ...,                                                                                                                                              │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                                       │ │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                                      │ │
│ │                  ]                                                                                                                                                         │ │
│ │             gm = GraphModule()                                                                                                                                             │ │
│ │           name = 'inductor'                                                                                                                                                │ │
│ │           node = output                                                                                                                                                    │ │
│ │             pl = l_tokens_                                                                                                                                                 │ │
│ │   placeholders = [l_tokens_]                                                                                                                                               │ │
│ │           self = OutputGraph(                                                                                                                                              │ │
│ │                  │   local_scope={},                                                                                                                                       │ │
│ │                  │   global_scope={                                                                                                                                        │ │
│ │                  │   │   '__name__': 'src.train.model',                                                                                                                    │ │
│ │                  │   │   '__doc__': 'GPT model implementation with configurable architecture.\n\nModern features:\n- Fla'+347,                                             │ │
│ │                  │   │   '__package__': 'src.train',                                                                                                                       │ │
│ │                  │   │   '__loader__': <_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                                                                │ │
│ │                  │   │   '__spec__': ModuleSpec(name='src.train.model', loader=<_frozen_importlib_external.SourceFileLoader object at 0x10c363fb0>,                        │ │
│ │                  origin='/Users/dino/Documents/Projects/datasets/src/train/model.py'),                                                                                     │ │
│ │                  │   │   '__file__': '/Users/dino/Documents/Projects/datasets/src/train/model.py',                                                                         │ │
│ │                  │   │   '__cached__': '/Users/dino/Documents/Projects/datasets/src/train/__pycache__/model.cpython-312.'+3,                                               │ │
│ │                  │   │   '__builtins__': {                                                                                                                                 │ │
│ │                  │   │   │   '__name__': 'builtins',                                                                                                                       │ │
│ │                  │   │   │   '__doc__': 'Built-in functions, types, exceptions, and other objects.\n\nThis module provides '+346,                                          │ │
│ │                  │   │   │   '__package__': '',                                                                                                                            │ │
│ │                  │   │   │   '__loader__': <class '_frozen_importlib.BuiltinImporter'>,                                                                                    │ │
│ │                  │   │   │   '__spec__': ModuleSpec(name='builtins', loader=<class '_frozen_importlib.BuiltinImporter'>, origin='built-in'),                               │ │
│ │                  │   │   │   '__build_class__': <built-in function __build_class__>,                                                                                       │ │
│ │                  │   │   │   '__import__': <built-in function __import__>,                                                                                                 │ │
│ │                  │   │   │   'abs': <built-in function abs>,                                                                                                               │ │
│ │                  │   │   │   'all': <built-in function all>,                                                                                                               │ │
│ │                  │   │   │   'any': <built-in function any>,                                                                                                               │ │
│ │                  │   │   │   ... +147                                                                                                                                      │ │
│ │                  │   │   },                                                                                                                                                │ │
│ │                  │   │   'math': <module 'math' (built-in)>,                                                                                                               │ │
│ │                  │   │   'dataclass': <function dataclass at 0x10798b880>,                                                                                                 │ │
│ │                  │   │   ... +16                                                                                                                                           │ │
│ │                  │   },                                                                                                                                                    │ │
│ │                  │   torch_function_mode_stack=[],                                                                                                                         │ │
│ │                  │   guard_on_key_order=set(),                                                                                                                             │ │
│ │                  │   input_source_to_sizes_strides={                                                                                                                       │ │
│ │                  │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False): {                                                 │ │
│ │                  │   │   │   'size': torch.Size([32, 1024]),                                                                                                               │ │
│ │                  │   │   │   'stride': (1024, 1)                                                                                                                           │ │
│ │                  │   │   }                                                                                                                                                 │ │
│ │                  │   },                                                                                                                                                    │ │
│ │                  │   dual_level=-1,                                                                                                                                        │ │
│ │                  │   functorch_layers=[],                                                                                                                                  │ │
│ │                  │   current_device=None,                                                                                                                                  │ │
│ │                  │   export=False,                                                                                                                                         │ │
│ │                  │   export_constraints=None,                                                                                                                              │ │
│ │                  │   _guards=None,                                                                                                                                         │ │
│ │                  │   _aotautograd_guards=None                                                                                                                              │ │
│ │                  )                                                                                                                                                         │ │
│ │            tot = 2                                                                                                                                                         │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/repro/after_dynamo.py:150 in __call__                                                 │
│                                                                                                                                                                                │
│   147 │   │   │   │   │   add_paths(exc)                                                                                                                                       │
│   148 │   │   │   │   │   raise                                                                                                                                                │
│   149 │   │   else:                                                                                                                                                            │
│ ❱ 150 │   │   │   compiled_gm = compiler_fn(gm, example_inputs)                                                                                                                │
│   151 │   │                                                                                                                                                                    │
│   152 │   │   return compiled_gm                                                                                                                                               │
│   153                                                                                                                                                                          │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────── locals ────────────────────────────────────────────╮                                                                             │
│ │    compiler_fn = functools.partial(<torch._TorchCompileInductorWrapper object at 0x10c45b6e0>) │                                                                             │
│ │ example_inputs = [                                                                             │                                                                             │
│ │                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                       │                                                                             │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                           │                                                                             │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                           │                                                                             │
│ │                  │   │   ...,                                                                  │                                                                             │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                           │                                                                             │
│ │                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                           │                                                                             │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                          │                                                                             │
│ │                  ]                                                                             │                                                                             │
│ │             gm = GraphModule()                                                                 │                                                                             │
│ │         kwargs = {}                                                                            │                                                                             │
│ │           self = <torch._dynamo.repro.after_dynamo.WrapBackendDebug object at 0x10c4f9c40>     │                                                                             │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                             │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/__init__.py:2380 in __call__                                                                  │
│                                                                                                                                                                                │
│   2377 │   def __call__(self, model_, inputs_):                                                 ╭─────────────────────────────── locals ───────────────────────────────╮       │
│   2378 │   │   from torch._inductor.compile_fx import compile_fx                                │ inputs_ = [                                                          │       │
│   2379 │   │                                                                                    │           │   tensor([[   2,  330,  345,  ...,    0,    0,    0],    │       │
│ ❱ 2380 │   │   return compile_fx(model_, inputs_, config_patches=self.config)                   │           │   │   [   2,  330,  345,  ...,    0,    0,    0],        │       │
│   2381 │                                                                                        │           │   │   [   2,  330,  345,  ...,    0,    0,    0],        │       │
│   2382 │   def get_compiler_config(self):                                                       │           │   │   ...,                                               │       │
│   2383 │   │   from torch._inductor.compile_fx import get_patched_config_dict                   │           │   │   [   2,  330,  345,  ...,    0,    0,    0],        │       │
│                                                                                                 │           │   │   [   2, 1103,  180,  ...,    0,    0,    0],        │       │
│                                                                                                 │           │   │   [   2,  330,  345,  ...,    0,    0,    0]])       │       │
│                                                                                                 │           ]                                                          │       │
│                                                                                                 │  model_ = GraphModule()                                              │       │
│                                                                                                 │    self = <torch._TorchCompileInductorWrapper object at 0x10c45b6e0> │       │
│                                                                                                 ╰──────────────────────────────────────────────────────────────────────╯       │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_inductor/compile_fx.py:2418 in compile_fx                                                    │
│                                                                                                                                                                                │
│   2415 │   │   │   functorch_config.patch(unlift_effect_tokens=True),                                                                                                          │
│   2416 │   │   ):                                                                                                                                                              │
│   2417 │   │   │   try:                                                                                                                                                        │
│ ❱ 2418 │   │   │   │   return aot_autograd(                                                                                                                                    │
│   2419 │   │   │   │   │   fw_compiler=fw_compiler,                                                                                                                            │
│   2420 │   │   │   │   │   bw_compiler=bw_compiler,                                                                                                                            │
│   2421 │   │   │   │   │   inference_compiler=inference_compiler,                                                                                                              │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │          bw_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>                                                               │ │
│ │       config_patches = {}                                                                                                                                                  │ │
│ │           cudagraphs = BoxedBool(value=False)                                                                                                                              │ │
│ │       decompositions = {                                                                                                                                                   │ │
│ │                        │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                                         │ │
│ │                        │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                                             │ │
│ │                        │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                                        │ │
│ │                        │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                                         │ │
│ │                        │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                                             │ │
│ │                        │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                                        │ │
│ │                        │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                                               │ │
│ │                        │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                                   │ │
│ │                        │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,                             │ │
│ │                        │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,                                 │ │
│ │                        │   ... +1148                                                                                                                                       │ │
│ │                        }                                                                                                                                                   │ │
│ │      example_inputs_ = [                                                                                                                                                   │ │
│ │                        │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                             │ │
│ │                        │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                 │ │
│ │                        │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                 │ │
│ │                        │   │   ...,                                                                                                                                        │ │
│ │                        │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                                 │ │
│ │                        │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                                 │ │
│ │                        │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                                │ │
│ │                        ]                                                                                                                                                   │ │
│ │            fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                                                                                │ │
│ │       forward_device = BoxedDeviceIndex(value=None)                                                                                                                        │ │
│ │          fw_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>                                                               │ │
│ │             graph_id = 0                                                                                                                                                   │ │
│ │     ignore_shape_env = False                                                                                                                                               │ │
│ │   inference_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>                                                               │ │
│ │               model_ = GraphModule()                                                                                                                                       │ │
│ │   num_example_inputs = 1                                                                                                                                                   │ │
│ │ recursive_compile_fx = functools.partial(<function compile_fx at 0x1115ed800>, inner_compile=<function compile_fx_inner at 0x1115eccc0>, decompositions=None,              │ │
│ │                        ignore_shape_env=False)                                                                                                                             │ │
│ │      tracing_context = <torch._guards.TracingContext object at 0x127d62750>                                                                                                │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_dynamo/backends/common.py:109 in __call__                                                    │
│                                                                                                                                                                                │
│   106 │   │   try:                                                                                                                                                             │
│   107 │   │   │   # NB: NOT cloned!                                                                                                                                            │
│   108 │   │   │   with enable_aot_logging(), patch_config:                                                                                                                     │
│ ❱ 109 │   │   │   │   cg = aot_module_simplified(gm, example_inputs, **self.kwargs)                                                                                            │
│   110 │   │   │   │   counters["aot_autograd"]["ok"] += 1                                                                                                                      │
│   111 │   │   │   │   return disable(cg, reason="do not trace AOT-compiled graph")                                                                                             │
│   112 │   │   except TensorifyScalarRestartAnalysis:                                                                                                                           │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────────── locals ────────────────────────────────────────────────╮                                                                     │
│ │    bw_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270> │                                                                     │
│ │ example_inputs = [                                                                                     │                                                                     │
│ │                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                               │                                                                     │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                   │                                                                     │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                   │                                                                     │
│ │                  │   │   ...,                                                                          │                                                                     │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                   │                                                                     │
│ │                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                   │                                                                     │
│ │                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                  │                                                                     │
│ │                  ]                                                                                     │                                                                     │
│ │             gm = GraphModule()                                                                         │                                                                     │
│ │         kwargs = {}                                                                                    │                                                                     │
│ │   patch_config = <contextlib.nullcontext object at 0x15effbc50>                                        │                                                                     │
│ │           self = <torch._dynamo.backends.common.AotAutograd object at 0x10c65c830>                     │                                                                     │
│ │   use_fallback = False                                                                                 │                                                                     │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                     │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/aot_autograd.py:1199 in aot_module_simplified                                      │
│                                                                                                                                                                                │
│   1196 │   │   remote = should_use_remote_autograd_cache()                                                                                                                     │
│   1197 │   │   if local or remote:                                                                                                                                             │
│   1198 │   │   │   set_feature_use("aot_autograd_remote_cache", remote)                                                                                                        │
│ ❱ 1199 │   │   │   compiled_fn = AOTAutogradCache.load(                                                                                                                        │
│   1200 │   │   │   │   dispatch_and_compile,                                                                                                                                   │
│   1201 │   │   │   │   mod,                                                                                                                                                    │
│   1202 │   │   │   │   fake_flat_args,                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │ aot_autograd_arg_pos_to_source = [LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False)]                                          │ │
│ │                     aot_config = AOTConfig(                                                                                                                                │ │
│ │                                  │   fw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>,                                    │ │
│ │                                  │   bw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>,                                    │ │
│ │                                  │   partition_fn=<function compile_fx.<locals>.partition_fn at 0x15f20b420>,                                                              │ │
│ │                                  │   decompositions={                                                                                                                      │ │
│ │                                  │   │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                           │ │
│ │                                  │   │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                               │ │
│ │                                  │   │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                          │ │
│ │                                  │   │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                           │ │
│ │                                  │   │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                               │ │
│ │                                  │   │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                          │ │
│ │                                  │   │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                                 │ │
│ │                                  │   │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                     │ │
│ │                                  │   │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,               │ │
│ │                                  │   │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,                   │ │
│ │                                  │   │   ... +1148                                                                                                                         │ │
│ │                                  │   },                                                                                                                                    │ │
│ │                                  │   num_params_buffers=0,                                                                                                                 │ │
│ │                                  │   aot_id=0,                                                                                                                             │ │
│ │                                  │   keep_inference_input_mutations=True,                                                                                                  │ │
│ │                                  │   is_export=False,                                                                                                                      │ │
│ │                                  │   no_tangents=False,                                                                                                                    │ │
│ │                                  │   dynamic_shapes=False,                                                                                                                 │ │
│ │                                  │   aot_autograd_arg_pos_to_source=[                                                                                                      │ │
│ │                                  │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False)                                    │ │
│ │                                  │   ],                                                                                                                                    │ │
│ │                                  │   static_input_indices=[],                                                                                                              │ │
│ │                                  │   inference_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>,                             │ │
│ │                                  │   enable_log=True,                                                                                                                      │ │
│ │                                  │   pre_dispatch=False,                                                                                                                   │ │
│ │                                  │   cache_info=AOTAutogradCacheInfo(                                                                                                      │ │
│ │                                  │   │   cache_key='aafc62unoy33jivzcr5b4dyuop427ftckwhw5f26d5hk2wzd5kax',                                                                 │ │
│ │                                  │   │   start_time_ns=1760808444821322000,                                                                                                │ │
│ │                                  │   │   forward_symints=[]                                                                                                                │ │
│ │                                  │   ),                                                                                                                                    │ │
│ │                                  │   ignore_shape_env=False,                                                                                                               │ │
│ │                                  │   precompile_backend_id='__compiled_fn_1_5ab4c3c6_4970_4955_95fa_5beeed0dcec8'                                                          │ │
│ │                                  )                                                                                                                                         │ │
│ │                           args = [                                                                                                                                         │ │
│ │                                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                   │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   ...,                                                                                                                              │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                      │ │
│ │                                  ]                                                                                                                                         │ │
│ │     boxed_forward_device_index = BoxedDeviceIndex(value=None)                                                                                                              │ │
│ │                    bw_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>                                                     │ │
│ │                     cudagraphs = BoxedBool(value=False)                                                                                                                    │ │
│ │                 decompositions = {                                                                                                                                         │ │
│ │                                  │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                               │ │
│ │                                  │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                                   │ │
│ │                                  │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                              │ │
│ │                                  │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                               │ │
│ │                                  │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                                   │ │
│ │                                  │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                              │ │
│ │                                  │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                                     │ │
│ │                                  │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                         │ │
│ │                                  │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,                   │ │
│ │                                  │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,                       │ │
│ │                                  │   ... +1148                                                                                                                             │ │
│ │                                  }                                                                                                                                         │ │
│ │                 dynamic_shapes = False                                                                                                                                     │ │
│ │                 fake_flat_args = [FakeTensor(..., size=(32, 1024), dtype=torch.int64)]                                                                                     │ │
│ │                      fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                                                                      │ │
│ │                      full_args = [                                                                                                                                         │ │
│ │                                  │   tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                   │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   ...,                                                                                                                              │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                      │ │
│ │                                  ]                                                                                                                                         │ │
│ │                    fw_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>                                                     │ │
│ │               ignore_shape_env = False                                                                                                                                     │ │
│ │             inference_compiler = <torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>                                                     │ │
│ │ keep_inference_input_mutations = True                                                                                                                                      │ │
│ │                          local = True                                                                                                                                      │ │
│ │                            mod = GraphModule()                                                                                                                             │ │
│ │                         params = {}                                                                                                                                        │ │
│ │                    params_flat = []                                                                                                                                        │ │
│ │                     params_len = 0                                                                                                                                         │ │
│ │                    params_spec = TreeSpec(dict, [], [])                                                                                                                    │ │
│ │                         remote = False                                                                                                                                     │ │
│ │                      shape_env = <torch.fx.experimental.symbolic_shapes.ShapeEnv object at 0x15ed7c680>                                                                    │ │
│ │           static_input_indices = []                                                                                                                                        │ │
│ │                tracing_context = <torch._guards.TracingContext object at 0x127d62750>                                                                                      │ │
│ │                              x = tensor([[   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   ...,                                                                                                                              │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2, 1103,  180,  ...,    0,    0,    0],                                                                                       │ │
│ │                                  │   │   [   2,  330,  345,  ...,    0,    0,    0]])                                                                                      │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/_aot_autograd/autograd_cache.py:1140 in load                                       │
│                                                                                                                                                                                │
│   1137 │   │   │   │   │   │   time.time_ns(),                                                                                                                                 │
│   1138 │   │   │   │   │   │   forward_symints=symints,                                                                                                                        │
│   1139 │   │   │   │   │   )                                                                                                                                                   │
│ ❱ 1140 │   │   │   │   compiled_fn = dispatch_and_compile()                                                                                                                    │
│   1141 │   │   │                                                                                                                                                               │
│   1142 │   │   │   cache_info.update(                                                                                                                                          │
│   1143 │   │   │   │   {                                                                                                                                                       │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────────────────────────────────────── locals ──────────────────────────────────────────────────────────────────────────────────╮ │
│ │                 aot_config = AOTConfig(                                                                                                                                    │ │
│ │                              │   fw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>,                                        │ │
│ │                              │   bw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>,                                        │ │
│ │                              │   partition_fn=<function compile_fx.<locals>.partition_fn at 0x15f20b420>,                                                                  │ │
│ │                              │   decompositions={                                                                                                                          │ │
│ │                              │   │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                               │ │
│ │                              │   │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                                   │ │
│ │                              │   │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                              │ │
│ │                              │   │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                               │ │
│ │                              │   │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                                   │ │
│ │                              │   │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                              │ │
│ │                              │   │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                                     │ │
│ │                              │   │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                         │ │
│ │                              │   │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,                   │ │
│ │                              │   │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,                       │ │
│ │                              │   │   ... +1148                                                                                                                             │ │
│ │                              │   },                                                                                                                                        │ │
│ │                              │   num_params_buffers=0,                                                                                                                     │ │
│ │                              │   aot_id=0,                                                                                                                                 │ │
│ │                              │   keep_inference_input_mutations=True,                                                                                                      │ │
│ │                              │   is_export=False,                                                                                                                          │ │
│ │                              │   no_tangents=False,                                                                                                                        │ │
│ │                              │   dynamic_shapes=False,                                                                                                                     │ │
│ │                              │   aot_autograd_arg_pos_to_source=[                                                                                                          │ │
│ │                              │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False)                                        │ │
│ │                              │   ],                                                                                                                                        │ │
│ │                              │   static_input_indices=[],                                                                                                                  │ │
│ │                              │   inference_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>,                                 │ │
│ │                              │   enable_log=True,                                                                                                                          │ │
│ │                              │   pre_dispatch=False,                                                                                                                       │ │
│ │                              │   cache_info=AOTAutogradCacheInfo(                                                                                                          │ │
│ │                              │   │   cache_key='aafc62unoy33jivzcr5b4dyuop427ftckwhw5f26d5hk2wzd5kax',                                                                     │ │
│ │                              │   │   start_time_ns=1760808444821322000,                                                                                                    │ │
│ │                              │   │   forward_symints=[]                                                                                                                    │ │
│ │                              │   ),                                                                                                                                        │ │
│ │                              │   ignore_shape_env=False,                                                                                                                   │ │
│ │                              │   precompile_backend_id='__compiled_fn_1_5ab4c3c6_4970_4955_95fa_5beeed0dcec8'                                                              │ │
│ │                              )                                                                                                                                             │ │
│ │                       args = [FakeTensor(..., size=(32, 1024), dtype=torch.int64)]                                                                                         │ │
│ │ boxed_forward_device_index = BoxedDeviceIndex(value=None)                                                                                                                  │ │
│ │           cache_event_time = 1760808444821321000                                                                                                                           │ │
│ │                 cache_info = {'cache_status_detailed': 'full_miss'}                                                                                                        │ │
│ │                  cache_key = 'aafc62unoy33jivzcr5b4dyuop427ftckwhw5f26d5hk2wzd5kax'                                                                                        │ │
│ │                cache_state = 'miss'                                                                                                                                        │ │
│ │                compiled_fn = None                                                                                                                                          │ │
│ │                 cudagraphs = BoxedBool(value=False)                                                                                                                        │ │
│ │                debug_lines = [                                                                                                                                             │ │
│ │                              │   '[6o3knobbg3ejotcr47jlqhs2ieqanmjd744ginceq5oxifq326p] aot_config: (0, True, Fals'+127,                                                   │ │
│ │                              │   '[cev5uo2jlwdhw2uyzcm7vr6cl23azjfw437f5r5lskm7spucos6] grad_enabled: True',                                                               │ │
│ │                              │   '[esstihe2nyydk4mhzpvox3qkajyu5y5t23hk3fi2me7jn75xi3o] disable_amp: False',                                                               │ │
│ │                              │   '[esstihe2nyydk4mhzpvox3qkajyu5y5t23hk3fi2me7jn75xi3o] deterministic_algorithms: '+5,                                                     │ │
│ │                              │   '[zrjpw2lsj63yewxfvp5vehkmqyffxtjo2jxbju3m56zkuqlrs6h] autograd_config: <bytes>',                                                         │ │
│ │                              │   '[n6sc2fvnirfszghhl57eizswoeza3b7ymawunbnoo74dzwi675c] saved_tensors_hooks_fx_wra'+24,                                                    │ │
│ │                              │   '[xoq5tqk7m2hcbi5onj74xhiytpuicqgltbrappxcvbobwehnkdk] gm: GraphModule()\n\n\n\ndef f'+237,                                               │ │
│ │                              │   '[ozhtvxrvuultkrb4tdhgpbyo47sbxvrpz57uoduiixnosrujthz] example_inputs[0]: TensorM'+359,                                                   │ │
│ │                              │   '[v3hzzlv4tjgvp3pyhmzagjd25orl6n7nynoa7svlhhwk73b7u3c] cache_key_tag: ',                                                                  │ │
│ │                              │   '[lmglpn4zi7vob56n34r2j2rk7flv5xfgrcvmo7xcpirqsitygqx] fx_kwargs[boxed_forward_de'+41,                                                    │ │
│ │                              │   ... +341                                                                                                                                  │ │
│ │                              ]                                                                                                                                             │ │
│ │                      entry = None                                                                                                                                          │ │
│ │                  fx_config = {'cudagraphs': BoxedBool(value=False), 'boxed_forward_device_index': BoxedDeviceIndex(value=None)}                                            │ │
│ │                         gm = GraphModule()                                                                                                                                 │ │
│ │                      local = True                                                                                                                                          │ │
│ │                        mod = GraphModule()                                                                                                                                 │ │
│ │                     remote = False                                                                                                                                         │ │
│ │                    symints = []                                                                                                                                            │ │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯ │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/aot_autograd.py:1184 in dispatch_and_compile                                       │
│                                                                                                                                                                                │
│   1181 │   def dispatch_and_compile():                                                                                                                                         │
│   1182 │   │   functional_call = create_functional_call(mod, params_spec, params_len)                                                                                          │
│   1183 │   │   with compiled_autograd._disable():                                                                                                                              │
│ ❱ 1184 │   │   │   compiled_fn, _ = create_aot_dispatcher_function(                                                                                                            │
│   1185 │   │   │   │   functional_call,                                                                                                                                        │
│   1186 │   │   │   │   fake_flat_args,                                                                                                                                         │
│   1187 │   │   │   │   aot_config,                                                                                                                                             │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────────────────────────────────────── locals ────────────────────────────────────────────────────────────────────────╮                      │
│ │     aot_config = AOTConfig(                                                                                                                           │                      │
│ │                  │   fw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>,                               │                      │
│ │                  │   bw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>,                               │                      │
│ │                  │   partition_fn=<function compile_fx.<locals>.partition_fn at 0x15f20b420>,                                                         │                      │
│ │                  │   decompositions={                                                                                                                 │                      │
│ │                  │   │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                      │                      │
│ │                  │   │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                          │                      │
│ │                  │   │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                     │                      │
│ │                  │   │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                      │                      │
│ │                  │   │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                          │                      │
│ │                  │   │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                     │                      │
│ │                  │   │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                            │                      │
│ │                  │   │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                │                      │
│ │                  │   │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,          │                      │
│ │                  │   │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,              │                      │
│ │                  │   │   ... +1148                                                                                                                    │                      │
│ │                  │   },                                                                                                                               │                      │
│ │                  │   num_params_buffers=0,                                                                                                            │                      │
│ │                  │   aot_id=0,                                                                                                                        │                      │
│ │                  │   keep_inference_input_mutations=True,                                                                                             │                      │
│ │                  │   is_export=False,                                                                                                                 │                      │
│ │                  │   no_tangents=False,                                                                                                               │                      │
│ │                  │   dynamic_shapes=False,                                                                                                            │                      │
│ │                  │   aot_autograd_arg_pos_to_source=[                                                                                                 │                      │
│ │                  │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False)                               │                      │
│ │                  │   ],                                                                                                                               │                      │
│ │                  │   static_input_indices=[],                                                                                                         │                      │
│ │                  │   inference_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>,                        │                      │
│ │                  │   enable_log=True,                                                                                                                 │                      │
│ │                  │   pre_dispatch=False,                                                                                                              │                      │
│ │                  │   cache_info=AOTAutogradCacheInfo(                                                                                                 │                      │
│ │                  │   │   cache_key='aafc62unoy33jivzcr5b4dyuop427ftckwhw5f26d5hk2wzd5kax',                                                            │                      │
│ │                  │   │   start_time_ns=1760808444821322000,                                                                                           │                      │
│ │                  │   │   forward_symints=[]                                                                                                           │                      │
│ │                  │   ),                                                                                                                               │                      │
│ │                  │   ignore_shape_env=False,                                                                                                          │                      │
│ │                  │   precompile_backend_id='__compiled_fn_1_5ab4c3c6_4970_4955_95fa_5beeed0dcec8'                                                     │                      │
│ │                  )                                                                                                                                    │                      │
│ │ fake_flat_args = [FakeTensor(..., size=(32, 1024), dtype=torch.int64)]                                                                                │                      │
│ │      fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                                                                 │                      │
│ │            mod = GraphModule()                                                                                                                        │                      │
│ │     params_len = 0                                                                                                                                    │                      │
│ │    params_spec = TreeSpec(dict, [], [])                                                                                                               │                      │
│ │      shape_env = <torch.fx.experimental.symbolic_shapes.ShapeEnv object at 0x15ed7c680>                                                               │                      │
│ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                      │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/aot_autograd.py:576 in create_aot_dispatcher_function                              │
│                                                                                                                                                                                │
│    573 │   shape_env: Optional[ShapeEnv],                                                                                                                                      │
│    574 ) -> tuple[Callable, ViewAndMutationMeta]:                                                                                                                              │
│    575 │   with dynamo_timed("create_aot_dispatcher_function", log_pt2_compile_event=True):                                                                                    │
│ ❱  576 │   │   return _create_aot_dispatcher_function(                                                                                                                         │
│    577 │   │   │   flat_fn, fake_flat_args, aot_config, fake_mode, shape_env                                                                                                   │
│    578 │   │   )                                                                                                                                                               │
│    579                                                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────────────────────────────────────── locals ────────────────────────────────────────────────────────────────────────╮                      │
│ │     aot_config = AOTConfig(                                                                                                                           │                      │
│ │                  │   fw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>,                               │                      │
│ │                  │   bw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>,                               │                      │
│ │                  │   partition_fn=<function compile_fx.<locals>.partition_fn at 0x15f20b420>,                                                         │                      │
│ │                  │   decompositions={                                                                                                                 │                      │
│ │                  │   │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                      │                      │
│ │                  │   │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                          │                      │
│ │                  │   │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                     │                      │
│ │                  │   │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                      │                      │
│ │                  │   │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                          │                      │
│ │                  │   │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                     │                      │
│ │                  │   │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                            │                      │
│ │                  │   │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                │                      │
│ │                  │   │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,          │                      │
│ │                  │   │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,              │                      │
│ │                  │   │   ... +1148                                                                                                                    │                      │
│ │                  │   },                                                                                                                               │                      │
│ │                  │   num_params_buffers=0,                                                                                                            │                      │
│ │                  │   aot_id=0,                                                                                                                        │                      │
│ │                  │   keep_inference_input_mutations=True,                                                                                             │                      │
│ │                  │   is_export=False,                                                                                                                 │                      │
│ │                  │   no_tangents=False,                                                                                                               │                      │
│ │                  │   dynamic_shapes=False,                                                                                                            │                      │
│ │                  │   aot_autograd_arg_pos_to_source=[                                                                                                 │                      │
│ │                  │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False)                               │                      │
│ │                  │   ],                                                                                                                               │                      │
│ │                  │   static_input_indices=[],                                                                                                         │                      │
│ │                  │   inference_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>,                        │                      │
│ │                  │   enable_log=True,                                                                                                                 │                      │
│ │                  │   pre_dispatch=False,                                                                                                              │                      │
│ │                  │   cache_info=AOTAutogradCacheInfo(                                                                                                 │                      │
│ │                  │   │   cache_key='aafc62unoy33jivzcr5b4dyuop427ftckwhw5f26d5hk2wzd5kax',                                                            │                      │
│ │                  │   │   start_time_ns=1760808444821322000,                                                                                           │                      │
│ │                  │   │   forward_symints=[]                                                                                                           │                      │
│ │                  │   ),                                                                                                                               │                      │
│ │                  │   ignore_shape_env=False,                                                                                                          │                      │
│ │                  │   precompile_backend_id='__compiled_fn_1_5ab4c3c6_4970_4955_95fa_5beeed0dcec8'                                                     │                      │
│ │                  )                                                                                                                                    │                      │
│ │ fake_flat_args = [FakeTensor(..., size=(32, 1024), dtype=torch.int64)]                                                                                │                      │
│ │      fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                                                                 │                      │
│ │      shape_env = <torch.fx.experimental.symbolic_shapes.ShapeEnv object at 0x15ed7c680>                                                               │                      │
│ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                      │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/aot_autograd.py:687 in _create_aot_dispatcher_function                             │
│                                                                                                                                                                                │
│    684 │   │   │   │   │   )                                                                                                                                                   │
│    685 │   │   │   │                                                                                                                                                           │
│    686 │   │   │   │   with dynamo_timed_ctx, ctx:                                                                                                                             │
│ ❱  687 │   │   │   │   │   fw_metadata = run_functionalized_fw_and_collect_metadata(                                                                                           │
│    688 │   │   │   │   │   │   flat_fn,                                                                                                                                        │
│    689 │   │   │   │   │   │   static_input_indices=aot_config.static_input_indices,                                                                                           │
│    690 │   │   │   │   │   │   keep_input_mutations=aot_config.keep_inference_input_mutations,                                                                                 │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────────────────────────────────────────── locals ────────────────────────────────────────────────────────────────────────────╮              │
│ │             aot_config = AOTConfig(                                                                                                                           │              │
│ │                          │   fw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2000>,                               │              │
│ │                          │   bw_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2270>,                               │              │
│ │                          │   partition_fn=<function compile_fx.<locals>.partition_fn at 0x15f20b420>,                                                         │              │
│ │                          │   decompositions={                                                                                                                 │              │
│ │                          │   │   <OpOverload(op='aten.addcdiv', overload='default')>: <function addcdiv at 0x10b697f60>,                                      │              │
│ │                          │   │   <OpOverload(op='aten.addcdiv', overload='out')>: <function addcdiv at 0x10b697f60>,                                          │              │
│ │                          │   │   <OpOverload(op='aten.addcdiv_', overload='default')>: <function addcdiv at 0x10b72fec0>,                                     │              │
│ │                          │   │   <OpOverload(op='aten.addcmul', overload='default')>: <function addcmul at 0x10b6b4360>,                                      │              │
│ │                          │   │   <OpOverload(op='aten.addcmul', overload='out')>: <function addcmul at 0x10b6b4360>,                                          │              │
│ │                          │   │   <OpOverload(op='aten.addcmul_', overload='default')>: <function addcmul at 0x10b72fd80>,                                     │              │
│ │                          │   │   <OpOverload(op='aten.addr', overload='default')>: <function addr at 0x10b6b76a0>,                                            │              │
│ │                          │   │   <OpOverload(op='aten.addr', overload='out')>: <function addr at 0x10b6b76a0>,                                                │              │
│ │                          │   │   <OpOverload(op='aten.affine_grid_generator', overload='default')>: <function affine_grid_generator at 0x10b556e80>,          │              │
│ │                          │   │   <OpOverload(op='aten.affine_grid_generator', overload='out')>: <function affine_grid_generator at 0x10b556e80>,              │              │
│ │                          │   │   ... +1148                                                                                                                    │              │
│ │                          │   },                                                                                                                               │              │
│ │                          │   num_params_buffers=0,                                                                                                            │              │
│ │                          │   aot_id=0,                                                                                                                        │              │
│ │                          │   keep_inference_input_mutations=True,                                                                                             │              │
│ │                          │   is_export=False,                                                                                                                 │              │
│ │                          │   no_tangents=False,                                                                                                               │              │
│ │                          │   dynamic_shapes=False,                                                                                                            │              │
│ │                          │   aot_autograd_arg_pos_to_source=[                                                                                                 │              │
│ │                          │   │   LocalSource(local_name='tokens', is_input=True, dynamism=None, is_derefed_cell_contents=False)                               │              │
│ │                          │   ],                                                                                                                               │              │
│ │                          │   static_input_indices=[],                                                                                                         │              │
│ │                          │   inference_compiler=<torch._functorch.aot_autograd.SerializableAOTDispatchCompiler object at 0x15f0c2150>,                        │              │
│ │                          │   enable_log=True,                                                                                                                 │              │
│ │                          │   pre_dispatch=False,                                                                                                              │              │
│ │                          │   cache_info=AOTAutogradCacheInfo(                                                                                                 │              │
│ │                          │   │   cache_key='aafc62unoy33jivzcr5b4dyuop427ftckwhw5f26d5hk2wzd5kax',                                                            │              │
│ │                          │   │   start_time_ns=1760808444821322000,                                                                                           │              │
│ │                          │   │   forward_symints=[]                                                                                                           │              │
│ │                          │   ),                                                                                                                               │              │
│ │                          │   ignore_shape_env=False,                                                                                                          │              │
│ │                          │   precompile_backend_id='__compiled_fn_1_5ab4c3c6_4970_4955_95fa_5beeed0dcec8'                                                     │              │
│ │                          )                                                                                                                                    │              │
│ │                    ctx = <contextlib.nullcontext object at 0x15f0bf800>                                                                                       │              │
│ │       dynamo_timed_ctx = <contextlib._GeneratorContextManager object at 0x15f0bf980>                                                                          │              │
│ │         fake_flat_args = [FakeTensor(..., size=(32, 1024), dtype=torch.int64)]                                                                                │              │
│ │              fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                                                                 │              │
│ │                    mod = None                                                                                                                                 │              │
│ │         needs_autograd = False                                                                                                                                │              │
│ │ python_dispatcher_mode = <torch._C._EnablePythonDispatcher object at 0x15ed72cf0>                                                                             │              │
│ │              shape_env = <torch.fx.experimental.symbolic_shapes.ShapeEnv object at 0x15ed7c680>                                                               │              │
│ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯              │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/_aot_autograd/collect_metadata_analysis.py:198 in inner                            │
│                                                                                                                                                                                │
│   195 │   │   with disable_above, mode, suppress_pending:                                                                                                                      │
│   196 │   │   │   # precondition: The passed in function already handles unflattening inputs +                                                                                 │
│   197 │   │   │   flat_f_args = pytree.tree_map(_to_fun, flat_args)                                                                                                            │
│ ❱ 198 │   │   │   flat_f_outs = f(*flat_f_args)                                                                                                                                │
│   199 │   │   │   # We didn't do any tracing, so we don't need to process the                                                                                                  │
│   200 │   │   │   # unbacked symbols, they will just disappear into the ether.                                                                                                 │
│   201 │   │   │   # Also, prevent memoization from applying.                                                                                                                   │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────────────────── locals ─────────────────────────────────────────────────────────╮                                                    │
│ │         disable_above = <torch._C._ExcludeDispatchKeyGuard object at 0x111417db0>                                       │                                                    │
│ │             fake_mode = <torch._subclasses.fake_tensor.FakeTensorMode object at 0x15f0c1d60>                            │                                                    │
│ │             flat_args = (FakeTensor(..., size=(32, 1024), dtype=torch.int64),)                                          │                                                    │
│ │           flat_f_args = (FunctionalTensor(_to_functional_tensor(FakeTensor(..., size=(32, 1024), dtype=torch.int64))),) │                                                    │
│ │            input_info = []                                                                                              │                                                    │
│ │             is_export = False                                                                                           │                                                    │
│ │              is_train = False                                                                                           │                                                    │
│ │  keep_input_mutations = True                                                                                            │                                                    │
│ │                  mode = <torch._subclasses.functional_tensor.FunctionalTensorMode object at 0x15f1102f0>                │                                                    │
│ │           output_info = []                                                                                              │                                                    │
│ │ prior_autocast_states = [False, False, torch.float16, torch.bfloat16, True]                                             │                                                    │
│ │    prior_grad_enabled = True                                                                                            │                                                    │
│ │             shape_env = <torch.fx.experimental.symbolic_shapes.ShapeEnv object at 0x15ed7c680>                          │                                                    │
│ │  static_input_indices = []                                                                                              │                                                    │
│ │      suppress_pending = <contextlib._GeneratorContextManager object at 0x15f111070>                                     │                                                    │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                    │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/_functorch/_aot_autograd/traced_function_transforms.py:902 in functional_call                 │
│                                                                                                                                                                                │
│   899 │   │   │   │   │   )                                                                                                                                                    │
│   900 │   │   │   │   │   with torch.autograd.detect_anomaly(check_nan=False):                                                                                                 │
│   901 │   │   │   │   │   │   detect_fake_mode().epoch += 1                                                                                                                    │
│ ❱ 902 │   │   │   │   │   │   out = PropagateUnbackedSymInts(mod).run(                                                                                                         │
│   903 │   │   │   │   │   │   │   *args[params_len:], **kwargs                                                                                                                 │
│   904 │   │   │   │   │   │   )                                                                                                                                                │
│   905 │   │   │   else:                                                                                                                                                        │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────────────────── locals ────────────────────────────────────────────────────╮                                                              │
│ │        args = (FunctionalTensor(_to_functional_tensor(FakeTensor(..., size=(32, 1024), dtype=torch.int64))),) │                                                              │
│ │      kwargs = {}                                                                                              │                                                              │
│ │         mod = GraphModule()                                                                                   │                                                              │
│ │  params_len = 0                                                                                               │                                                              │
│ │ params_spec = TreeSpec(dict, [], [])                                                                          │                                                              │
│ ╰───────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                              │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/torch/fx/interpreter.py:153 in run                                                                  │
│                                                                                                                                                                                │
│   150 │   │   if enable_io_processing:                                                                                                                                         │
│   151 │   │   │   args = self.graph.process_inputs(*args)                                                                                                                      │
│   152 │   │   self.args_iter: Iterator[Any] = iter(args)                                                                                                                       │
│ ❱ 153 │   │   pbar = tqdm(                                                                                                                                                     │
│   154 │   │   │   total=len(self.graph.nodes),                                                                                                                                 │
│   155 │   │   │   desc=f"{self.name}: {str(list(self.graph.nodes)) if config.verbose_progress                                                                                  │
│   156 │   │   │   initial=0,                                                                                                                                                   │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────────────────── locals ────────────────────────────────────────────────────────╮                                                     │
│ │                 args = (FunctionalTensor(_to_functional_tensor(FakeTensor(..., size=(32, 1024), dtype=torch.int64))),) │                                                     │
│ │ enable_io_processing = True                                                                                            │                                                     │
│ │          initial_env = None                                                                                            │                                                     │
│ │                 self = <torch.fx.experimental.symbolic_shapes.PropagateUnbackedSymInts object at 0x15f111280>          │                                                     │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                     │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/tqdm/std.py:665 in __new__                                                                          │
│                                                                                                                                                                                │
│    662 │                                                                                        ╭───────────────────── locals ─────────────────────╮                           │
│    663 │   def __new__(cls, *_, **__):                                                          │        _ = ()                                    │                           │
│    664 │   │   instance = object.__new__(cls)                                                   │ instance = <tqdm.std.tqdm object at 0x15f1112b0> │                           │
│ ❱  665 │   │   with cls.get_lock():  # also constructs lock if non-existent                     ╰──────────────────────────────────────────────────╯                           │
│    666 │   │   │   cls._instances.add(instance)                                                                                                                                │
│    667 │   │   │   # create monitoring thread                                                                                                                                  │
│    668 │   │   │   if cls.monitor_interval and (cls.monitor is None                                                                                                            │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/tqdm/std.py:764 in get_lock                                                                         │
│                                                                                                                                                                                │
│    761 │   def get_lock(cls):                                                                                                                                                  │
│    762 │   │   """Get the global lock. Construct it if it does not exist."""                                                                                                   │
│    763 │   │   if not hasattr(cls, '_lock'):                                                                                                                                   │
│ ❱  764 │   │   │   cls._lock = TqdmDefaultWriteLock()                                                                                                                          │
│    765 │   │   return cls._lock                                                                                                                                                │
│    766 │                                                                                                                                                                       │
│    767 │   @classmethod                                                                                                                                                        │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/tqdm/std.py:97 in __init__                                                                          │
│                                                                                                                                                                                │
│     94 │   │   root_lock = cls.th_lock                                                                                                                                         │
│     95 │   │   if root_lock is not None:                                                                                                                                       │
│     96 │   │   │   root_lock.acquire()                                                                                                                                         │
│ ❱   97 │   │   cls.create_mp_lock()                                                                                                                                            │
│     98 │   │   self.locks = [lk for lk in [cls.mp_lock, cls.th_lock] if lk is not None]                                                                                        │
│     99 │   │   if root_lock is not None:                                                                                                                                       │
│    100 │   │   │   root_lock.release()                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────── locals ──────────────────────────────────────╮                                                                                          │
│ │ root_lock = <locked _thread.RLock object owner=8711276544 count=1 at 0x108cbc2c0> │                                                                                          │
│ │      self = <tqdm.std.TqdmDefaultWriteLock object at 0x15f1113a0>                 │                                                                                          │
│ ╰───────────────────────────────────────────────────────────────────────────────────╯                                                                                          │
│                                                                                                                                                                                │
│ /Users/dino/Documents/Projects/datasets/.venv/lib/python3.12/site-packages/tqdm/std.py:121 in create_mp_lock                                                                   │
│                                                                                                                                                                                │
│    118 │   │   if not hasattr(cls, 'mp_lock'):                                                                                                                                 │
│    119 │   │   │   try:                                                                                                                                                        │
│    120 │   │   │   │   from multiprocessing import RLock                                                                                                                       │
│ ❱  121 │   │   │   │   cls.mp_lock = RLock()                                                                                                                                   │
│    122 │   │   │   except (ImportError, OSError):  # pragma: no cover                                                                                                          │
│    123 │   │   │   │   cls.mp_lock = None                                                                                                                                      │
│    124                                                                                                                                                                         │
│                                                                                                                                                                                │
│ ╭────────────────────────────────────────────────── locals ──────────────────────────────────────────────────╮                                                                 │
│ │ RLock = <bound method BaseContext.RLock of <multiprocessing.context.DefaultContext object at 0x107fdd9a0>> │                                                                 │
│ ╰────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                                                 │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/context.py:73 in RLock                                                     │
│                                                                                                                                                                                │
│    70 │   def RLock(self):                                                                     ╭─────────────────────────────── locals ────────────────────────────────╮       │
│    71 │   │   '''Returns a recursive lock object'''                                            │ self = <multiprocessing.context.DefaultContext object at 0x107fdd9a0> │       │
│    72 │   │   from .synchronize import RLock                                                   ╰───────────────────────────────────────────────────────────────────────╯       │
│ ❱  73 │   │   return RLock(ctx=self.get_context())                                                                                                                             │
│    74 │                                                                                                                                                                        │
│    75 │   def Condition(self, lock=None):                                                                                                                                      │
│    76 │   │   '''Returns a condition object'''                                                                                                                                 │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/synchronize.py:194 in __init__                                             │
│                                                                                                                                                                                │
│   191 class RLock(SemLock):                                                                    ╭────────────────────────────── locals ───────────────────────────────╮         │
│   192 │                                                                                        │  ctx = <multiprocessing.context.SpawnContext object at 0x107fdd490> │         │
│   193 │   def __init__(self, *, ctx):                                                          │ self = <RLock(None, 0)>                                             │         │
│ ❱ 194 │   │   SemLock.__init__(self, RECURSIVE_MUTEX, 1, 1, ctx=ctx)                           ╰─────────────────────────────────────────────────────────────────────╯         │
│   195 │                                                                                                                                                                        │
│   196 │   def __repr__(self):                                                                                                                                                  │
│   197 │   │   try:                                                                                                                                                             │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/synchronize.py:80 in __init__                                              │
│                                                                                                                                                                                │
│    77 │   │   │   # disabled.  When the object is garbage collected or the                                                                                                     │
│    78 │   │   │   # process shuts down we unlink the semaphore name                                                                                                            │
│    79 │   │   │   from .resource_tracker import register                                                                                                                       │
│ ❱  80 │   │   │   register(self._semlock.name, "semaphore")                                                                                                                    │
│    81 │   │   │   util.Finalize(self, SemLock._cleanup, (self._semlock.name,),                                                                                                 │
│    82 │   │   │   │   │   │     exitpriority=0)                                                                                                                                │
│    83                                                                                                                                                                          │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────────────────────────────── locals ─────────────────────────────────────────────────────────────╮                                           │
│ │        ctx = <multiprocessing.context.SpawnContext object at 0x107fdd490>                                                        │                                           │
│ │          i = 0                                                                                                                   │                                           │
│ │       kind = 0                                                                                                                   │                                           │
│ │   maxvalue = 1                                                                                                                   │                                           │
│ │   register = <bound method ResourceTracker.register of <multiprocessing.resource_tracker.ResourceTracker object at 0x108ce89b0>> │                                           │
│ │       self = <RLock(None, 0)>                                                                                                    │                                           │
│ │         sl = <_multiprocessing.SemLock object at 0x15f0d31a0>                                                                    │                                           │
│ │ unlink_now = False                                                                                                               │                                           │
│ │      value = 1                                                                                                                   │                                           │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                                           │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/resource_tracker.py:174 in register                                        │
│                                                                                                                                                                                │
│   171 │                                                                                                                                                                        │
│   172 │   def register(self, name, rtype):                                                                                                                                     │
│   173 │   │   '''Register name of resource with resource tracker.'''                                                                                                           │
│ ❱ 174 │   │   self._send('REGISTER', name, rtype)                                                                                                                              │
│   175 │                                                                                                                                                                        │
│   176 │   def unregister(self, name, rtype):                                                                                                                                   │
│   177 │   │   '''Unregister name of resource with resource tracker.'''                                                                                                         │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────── locals ─────────────────────────────────────╮                                                                                           │
│ │  name = '/mp-nvi4tj__'                                                           │                                                                                           │
│ │ rtype = 'semaphore'                                                              │                                                                                           │
│ │  self = <multiprocessing.resource_tracker.ResourceTracker object at 0x108ce89b0> │                                                                                           │
│ ╰──────────────────────────────────────────────────────────────────────────────────╯                                                                                           │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/resource_tracker.py:182 in _send                                           │
│                                                                                                                                                                                │
│   179 │                                                                                                                                                                        │
│   180 │   def _send(self, cmd, name, rtype):                                                                                                                                   │
│   181 │   │   try:                                                                                                                                                             │
│ ❱ 182 │   │   │   self.ensure_running()                                                                                                                                        │
│   183 │   │   except ReentrantCallError:                                                                                                                                       │
│   184 │   │   │   # The code below might or might not work, depending on whether                                                                                               │
│   185 │   │   │   # the resource tracker was already running and still alive.                                                                                                  │
│                                                                                                                                                                                │
│ ╭───────────────────────────────────── locals ─────────────────────────────────────╮                                                                                           │
│ │   cmd = 'REGISTER'                                                               │                                                                                           │
│ │  name = '/mp-nvi4tj__'                                                           │                                                                                           │
│ │ rtype = 'semaphore'                                                              │                                                                                           │
│ │  self = <multiprocessing.resource_tracker.ResourceTracker object at 0x108ce89b0> │                                                                                           │
│ ╰──────────────────────────────────────────────────────────────────────────────────╯                                                                                           │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/resource_tracker.py:148 in ensure_running                                  │
│                                                                                                                                                                                │
│   145 │   │   │   │   try:                                                                                                                                                     │
│   146 │   │   │   │   │   if _HAVE_SIGMASK:                                                                                                                                    │
│   147 │   │   │   │   │   │   signal.pthread_sigmask(signal.SIG_BLOCK, _IGNORED_SIGNALS)                                                                                       │
│ ❱ 148 │   │   │   │   │   pid = util.spawnv_passfds(exe, args, fds_to_pass)                                                                                                    │
│   149 │   │   │   │   finally:                                                                                                                                                 │
│   150 │   │   │   │   │   if _HAVE_SIGMASK:                                                                                                                                    │
│   151 │   │   │   │   │   │   signal.pthread_sigmask(signal.SIG_UNBLOCK, _IGNORED_SIGNALS)                                                                                     │
│                                                                                                                                                                                │
│ ╭──────────────────────────────────────────────────────────────────── locals ─────────────────────────────────────────────────────────────────────╮                            │
│ │        args = [b'/Users/dino/Documents/Projects/datasets/.venv/bin/python3', '-c', 'from multiprocessing.resource_tracker import main;main(7)'] │                            │
│ │         cmd = 'from multiprocessing.resource_tracker import main;main(%d)'                                                                      │                            │
│ │         exe = b'/Users/dino/Documents/Projects/datasets/.venv/bin/python3'                                                                      │                            │
│ │ fds_to_pass = [-1, 7]                                                                                                                           │                            │
│ │           r = 7                                                                                                                                 │                            │
│ │        self = <multiprocessing.resource_tracker.ResourceTracker object at 0x108ce89b0>                                                          │                            │
│ │           w = 10                                                                                                                                │                            │
│ ╰─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                            │
│                                                                                                                                                                                │
│ /Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/multiprocessing/util.py:456 in spawnv_passfds                                              │
│                                                                                                                                                                                │
│   453 │   passfds = tuple(sorted(map(int, passfds)))                                                                                                                           │
│   454 │   errpipe_read, errpipe_write = os.pipe()                                                                                                                              │
│   455 │   try:                                                                                                                                                                 │
│ ❱ 456 │   │   return _posixsubprocess.fork_exec(                                                                                                                               │
│   457 │   │   │   args, [path], True, passfds, None, None,                                                                                                                     │
│   458 │   │   │   -1, -1, -1, -1, -1, -1, errpipe_read, errpipe_write,                                                                                                         │
│   459 │   │   │   False, False, -1, None, None, None, -1, None,                                                                                                                │
│                                                                                                                                                                                │
│ ╭─────────────────────────────────────────────────────────────────────── locals ───────────────────────────────────────────────────────────────────────╮                       │
│ │ _posixsubprocess = <module '_posixsubprocess' (built-in)>                                                                                            │                       │
│ │             args = [b'/Users/dino/Documents/Projects/datasets/.venv/bin/python3', '-c', 'from multiprocessing.resource_tracker import main;main(7)'] │                       │
│ │     errpipe_read = 11                                                                                                                                │                       │
│ │    errpipe_write = 12                                                                                                                                │                       │
│ │          passfds = (-1, 7)                                                                                                                           │                       │
│ │             path = b'/Users/dino/Documents/Projects/datasets/.venv/bin/python3'                                                                      │                       │
│ │       subprocess = <module 'subprocess' from '/Users/dino/.local/share/uv/python/cpython-3.12.8-macos-aarch64-none/lib/python3.12/subprocess.py'>    │                       │
│ ╰──────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯                       │
╰────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────╯
BackendCompilerFailed: backend='inductor' raised:
ValueError: bad value(s) in fds_to_keep
